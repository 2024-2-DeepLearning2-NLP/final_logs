Parameter 'function'=<function get_post_edit_training_datasets.<locals>.preprocess_function_train at 0x7ea77ecff700> of the transform datasets.arrow_dataset.Dataset._map_single couldn't be hashed properly, a random hash was used instead. Make sure your transforms and parameters are serializable with pickle or dill for the dataset fingerprinting and caching to work. If you reuse this transform, the caching mechanism will consider it to be different from the previous calls and recompute everything. This warning is only showed once. Subsequent hashing failures won't be showed.
Sample 9870 of the training set: {'input_ids': [0, 133, 165, 3373, 5, 1468, 9, 5, 6063, 8, 5, 3989, 9, 5, 1229, 4, 50118, 1213, 1747, 156, 5, 1521, 9, 5, 403, 8, 476, 1300, 9, 11283, 19, 5, 6063, 797, 4, 50118, 12948, 6, 5, 476, 476, 1300, 74, 28, 13, 5, 403, 6, 5, 6063, 5656, 4, 50118, 22412, 6, 5, 5765, 6148, 7, 1606, 41, 6818, 9326, 792, 4, 50118, 12948, 27913, 39322, 2528, 634, 41, 20808, 2441, 8, 3728, 4827, 1507, 14, 5, 165, 197, 28, 156, 24, 115, 28, 341, 13, 5, 6655, 7, 680, 1901, 4972, 6, 5, 1468, 8, 5, 2187, 4, 2, 2, 36926, 13700, 31275, 35, 11380, 2156, 37463, 1933, 425, 25522, 417, 32062, 6920, 254, 24303, 1933, 931, 425, 701, 631, 479, 12698, 52, 6264, 5, 3280, 8047, 2156, 61, 16, 95, 255, 1215, 846, 1215, 8047, 2704, 5, 18327, 2630, 2156, 61, 21, 65, 9, 5, 2474, 383, 2156, 39111, 2156, 25715, 5964, 13, 37463, 5, 25522, 31375, 1536, 9834, 24303, 5, 6237, 2156, 8, 37463, 52, 6264, 5, 856, 5, 5, 169, 9, 2057, 5, 92, 8, 16097, 992, 12040, 2156, 110, 5548, 6237, 14749, 2156, 11, 5, 25715, 479, 50118, 44518, 39322, 35, 11380, 5, 3020, 6148, 479, 407, 42, 3089, 42, 6148, 40, 28, 341, 258, 13, 5, 14583, 8, 13, 8326, 25522, 31375, 1536, 9834, 24303, 110, 37463, 5, 7252, 5, 1907, 9, 2384, 47, 23126, 304, 479, 407, 7252, 5, 4136, 16, 5, 1104, 443, 9, 42, 25522, 417, 32062, 6920, 254, 24303, 9, 5, 1421, 259, 2156, 8, 5, 1275, 443, 16, 101, 10, 11283, 4631, 479, 50118, 44518, 39322, 35, 407, 47, 64, 192, 14, 77, 24, 22533, 101, 42, 50, 101, 42, 25522, 417, 32062, 6920, 254, 24303, 8, 5, 14893, 32, 70, 6908, 28, 11283, 2156, 98, 24, 18, 1256, 543, 7, 888, 1880, 24, 7252, 25522, 417, 32062, 6920, 254, 24303, 50118, 33347, 4827, 35, 38, 185, 24, 14, 42, 16, 6908, 28, 2829, 13026, 11, 5, 507, 1521, 25, 157, 479, 50118, 44518, 39322, 35, 256, 119, 12090, 64, 8085, 5, 5, 181, 6257, 1460, 479, 50118, 36926, 13700, 31275, 35, 20, 18327, 2630, 5043, 479, 2, 2, 38182, 3916, 2072, 5, 5209, 15, 5, 5043, 1521, 4, 47385, 50118, 33347, 4827, 35, 525, 12040, 110, 5548, 6237, 2156, 35670, 17487, 50118, 36926, 13700, 31275, 35, 8976, 479, 50118, 44518, 39322, 35, 10651, 154, 149, 110, 14583, 889, 479, 50118, 33347, 4827, 35, 5534, 8578, 8578, 479, 50118, 36926, 13700, 31275, 35, 525, 12040, 47, 216, 992, 12040, 479, 50118, 33347, 4827, 35, 7746, 128, 33206, 8578, 2156, 14, 18, 14583, 479, 50118, 36926, 13700, 31275, 35, 5359, 24, 18, 95, 10, 13053, 631, 25522, 31375, 1536, 9834, 24303, 479, 178, 7252, 11380, 14, 21, 5, 898, 479, 50118, 33347, 4827, 35, 7746, 128, 33206, 479, 38, 101, 5, 5, 5, 5, 6655, 15, 89, 25, 157, 479, 50118, 36926, 13700, 31275, 35, 25522, 31375, 1536, 9834, 24303, 50118, 44518, 39322, 35, 85, 18, 182, 5395, 25522, 31375, 1536, 9834, 24303, 479, 50118, 33347, 4827, 35, 2], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [0, 133, 2683, 6004, 2942, 14, 5, 1152, 45, 129, 56, 103, 3280, 8047, 6, 24, 67, 56, 5, 18327, 2630, 5043, 8, 1286, 1434, 19, 10, 16097, 169, 9, 992, 12040, 4, 287, 13, 5, 1468, 6, 5, 1152, 74, 28, 156, 9, 4136, 8, 11283, 4, 96, 1285, 6, 5, 507, 1521, 21, 802, 7, 28, 2829, 13026, 8, 2735, 87, 5, 1455, 1421, 4, 6811, 6, 5, 333, 439, 15, 7, 1649, 5, 17554, 18, 181, 6257, 1460, 8, 3244, 59, 103, 1254, 15, 14893, 4, 2]}.
***** Running training *****
  Num examples = 10950
  Num Epochs = 5
  Instantaneous batch size per device = 8
  Total train batch size (w. parallel, distributed & accumulation) = 16
  Gradient Accumulation steps = 2
  Total optimization steps = 3425
***** Running testing *****
  Num examples = 1422
  Instantaneous batch size per device = 16
  Total eval batch size = 16
Using default tokenizer.
{'rouge': {'rouge1': 39.3202, 'rouge2': 14.7931, 'rougeL': 26.5001, 'rougeLsum': 34.1812}, 'ppl': {'perplexity': 27.1374, 'ref_perplexity': 23.0336}, 'bertscore': {'precision': 88.2581, 'recall': 87.6046, 'f1': 87.9204}}
***** Running testing *****
  Num examples = 1422
  Instantaneous batch size per device = 16
  Total eval batch size = 16
Using default tokenizer.
{'rouge': {'rouge1': 40.8124, 'rouge2': 14.9969, 'rougeL': 26.891, 'rougeLsum': 35.7789}, 'ppl': {'perplexity': 35.1573, 'ref_perplexity': 58.9512}, 'bertscore': {'precision': 87.9436, 'recall': 87.9937, 'f1': 87.9614}}
***** Running testing *****
  Num examples = 1422
  Instantaneous batch size per device = 16
  Total eval batch size = 16
Using default tokenizer.
{'rouge': {'rouge1': 41.0386, 'rouge2': 14.8792, 'rougeL': 26.5085, 'rougeLsum': 35.8658}, 'ppl': {'perplexity': 55.5073, 'ref_perplexity': 83.0107}, 'bertscore': {'precision': 87.8161, 'recall': 88.0262, 'f1': 87.9144}}
