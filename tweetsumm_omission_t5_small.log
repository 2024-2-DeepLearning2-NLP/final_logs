Parameter 'function'=<function get_datasets.<locals>.preprocess_function at 0x7f3d3ff60e50> of the transform datasets.arrow_dataset.Dataset._map_single couldn't be hashed properly, a random hash was used instead. Make sure your transforms and parameters are serializable with pickle or dill for the dataset fingerprinting and caching to work. If you reuse this transform, the caching mechanism will consider it to be different from the previous calls and recompute everything. This warning is only showed once. Subsequent hashing failures won't be showed.
Round 1
Start Training!
Sample 261 of the training set: {'input_ids': [21603, 10, 3320, 382, 15, 3523, 78, 4363, 44, 2269, 500, 6913, 44, 9996, 2534, 2028, 28, 82, 520, 12, 36, 1219, 79, 130, 2327, 8, 1312, 6750, 1437, 78, 2654, 22, 17, 43, 80, 5, 27, 2944, 3, 9, 2107, 3281, 37, 29, 633, 119, 722, 2348, 140, 113, 130, 1219, 8, 6913, 885, 44, 9996, 1458, 1603, 933, 1315, 12, 8, 1078, 2101, 97, 55, 3320, 3072, 3708, 3390, 2018, 6206, 18, 25565, 6, 2049, 21, 652, 16, 1586, 5, 27, 31, 51, 310, 8032, 25, 31, 162, 141, 3, 9, 2841, 351, 16, 69, 1078, 1310, 5, 9348, 25, 754, 752, 140, 214, 125, 97, 8, 11949, 1320, 845, 34, 885, 7, 58, 7739, 3320, 3072, 3708, 3390, 9348, 25, 754, 92, 3606, 21, 140, 8, 119, 722, 130, 3, 6319, 12, 1242, 1312, 6750, 44, 8, 97, 6, 396, 58, 432, 8, 200, 3, 18, 5376, 63, 29, 204, 13311, 3320, 382, 15, 3523, 3963, 29, 22, 17, 217, 136, 2101, 648, 16, 8, 6913, 68, 7122, 367, 274, 62, 877, 12, 37, 11, 34, 22, 7, 4568, 314, 2028, 5, 101, 4363, 44, 9996, 1808, 1282, 4273, 8, 119, 722, 1114, 1312, 6750, 5, 3320, 382, 15, 3523, 1203, 27, 317, 34, 398, 13, 118, 8, 6380, 24, 474, 8, 18094, 7, 323, 30, 8, 11416, 131, 227, 62, 2944, 69, 2107, 6750, 78, 8, 722, 227, 178, 737, 22, 17, 237, 43, 24, 1182, 893, 3320, 382, 15, 3523, 27, 734, 24, 2327, 323, 19, 1316, 68, 3479, 3519, 7, 274, 8, 1078, 47, 6733, 5, 3320, 3072, 3708, 3390, 27, 31, 51, 8032, 12, 1616, 13, 8, 807, 25, 15110, 44, 69, 1078, 6206, 18, 25565, 3, 5, 27, 54, 734, 39, 3315, 5, 27, 43, 2804, 39, 10394, 12, 69, 2159, 2271, 78, 48, 54, 36, 8705, 5, 7739, 4893, 1303, 17, 5, 509, 87, 102, 63, 755, 956, 3264, 536, 279, 526, 3320, 3072, 3708, 3390, 27, 133, 92, 114, 12, 3691, 39, 2622, 30, 69, 3224, 1002, 21, 647, 2456, 6, 54, 25, 3, 7407, 39, 423, 564, 11, 1115, 58, 3, 12016, 3, 18, 446, 21993, 204, 13311, 3320, 382, 15, 3523, 1142, 1622, 34, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [37, 884, 845, 24, 3, 88, 3495, 8, 2269, 500, 6913, 44, 9996, 2534, 2028, 28, 112, 520, 11, 79, 410, 59, 129, 8, 1312, 6750, 91, 132, 11, 79, 130, 118, 1219, 24, 79, 33, 2327, 8, 1312, 6750, 1437, 5, 37, 3102, 987, 7, 44, 125, 97, 8, 6913, 1320, 845, 34, 885, 7, 11, 987, 7, 12, 3, 7407, 8, 423, 564, 11, 1115, 13, 8, 884, 12, 3691, 8, 10394, 16, 70, 3224, 358, 21, 647, 169, 5, 1]}.
***** Running training *****
  Num examples = 792
  Num Epochs = 5
  Instantaneous batch size per device = 8
  Total train batch size (w. parallel, distributed & accumulation) = 8
  Gradient Accumulation steps = 1
  Total optimization steps = 495
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 28.8884, 'rouge2': 10.8438, 'rougeL': 22.4128, 'rougeLsum': 25.8472}, 'ppl': {'perplexity': 62.8467, 'ref_perplexity': 13.2314}, 'bertscore': {'precision': 84.2535, 'recall': 86.2911, 'f1': 85.2366}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 36.3336, 'rouge2': 14.6116, 'rougeL': 28.0739, 'rougeLsum': 31.8371}, 'ppl': {'perplexity': 3.0192, 'ref_perplexity': 12.0565}, 'bertscore': {'precision': 86.5599, 'recall': 87.3021, 'f1': 86.9022}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 38.071, 'rouge2': 15.5326, 'rougeL': 29.5037, 'rougeLsum': 33.8698}, 'ppl': {'perplexity': 3.4791, 'ref_perplexity': 11.6506}, 'bertscore': {'precision': 87.1669, 'recall': 87.3932, 'f1': 87.2569}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 38.586, 'rouge2': 16.2871, 'rougeL': 30.0114, 'rougeLsum': 34.0528}, 'ppl': {'perplexity': 3.5818, 'ref_perplexity': 11.5381}, 'bertscore': {'precision': 87.2755, 'recall': 87.5585, 'f1': 87.3952}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 38.8823, 'rouge2': 16.796, 'rougeL': 30.5777, 'rougeLsum': 34.3845}, 'ppl': {'perplexity': 5.1226, 'ref_perplexity': 11.4367}, 'bertscore': {'precision': 87.3481, 'recall': 87.6395, 'f1': 87.4713}}

Start Predicting!
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round 2
Start Training!
Sample 120 of the training set: {'input_ids': [21603, 10, 3320, 5000, 23, 8892, 134, 413, 1493, 363, 19, 1786, 28, 39, 17652, 55, 8546, 55, 27, 162, 118, 1119, 12, 4303, 16, 28, 8, 2024, 2845, 11, 34, 131, 5168, 7, 11, 258, 15566, 3320, 4581, 3769, 3940, 1563, 31, 7, 161, 30, 34, 55, 27, 7, 34, 4626, 30, 66, 3509, 7, 58, 3, 2, 308, 11253, 3320, 5000, 23, 8892, 134, 413, 1493, 27, 183, 3, 9, 20, 208, 11, 169, 10780, 6, 256, 95, 12, 833, 11, 169, 3, 9, 3, 102, 210, 2743, 78, 3, 23, 214, 82, 17500, 33, 2024, 5, 48, 19, 15708, 5, 27, 31, 51, 13249, 91, 3320, 5000, 23, 8892, 134, 413, 1493, 275, 3, 23, 6994, 17, 43, 12, 483, 82, 4735, 250, 13, 424, 24, 19, 29, 17, 82, 7828, 5, 3320, 5000, 23, 8892, 134, 413, 1493, 3, 23, 31, 51, 3586, 8, 3370, 467, 250, 13, 48, 17081, 32, 521, 3320, 4581, 3769, 3940, 863, 12262, 39, 4735, 11, 653, 541, 5, 3320, 5000, 23, 8892, 134, 413, 1493, 24, 7, 8, 682, 3158, 1615, 103, 27, 43, 12, 12262, 541, 58, 3, 55, 3320, 5000, 23, 8892, 134, 413, 1493, 27, 214, 82, 4735, 1603, 3, 55, 3320, 4581, 3769, 3940, 27, 7, 8, 475, 3, 25289, 25, 24, 39, 17500, 33, 1083, 13249, 91, 58, 156, 78, 6, 258, 8, 4735, 56, 174, 12, 36, 12262, 5, 3, 2, 4950, 279, 3320, 5000, 23, 8892, 134, 413, 1493, 94, 2088, 17, 3, 25289, 140, 13, 82, 17500, 5, 34, 914, 3, 6668, 5, 366, 3, 23, 2031, 877, 12, 8, 543, 6, 34, 131, 243, 3, 23, 47, 13249, 91, 6, 1327, 81, 4384, 7, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [7327, 19, 24184, 24, 3, 88, 19, 3, 6319, 12, 11255, 139, 112, 23908, 905, 28, 8, 2024, 251, 5, 8628, 6490, 12, 12262, 8, 4735, 3, 99, 8, 475, 19, 3, 25289, 81, 13249, 91, 17500, 5, 1]}.
***** Running training *****
  Num examples = 792
  Num Epochs = 5
  Instantaneous batch size per device = 8
  Total train batch size (w. parallel, distributed & accumulation) = 8
  Gradient Accumulation steps = 1
  Total optimization steps = 495
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 32.3455, 'rouge2': 13.4034, 'rougeL': 25.0178, 'rougeLsum': 28.4639}, 'ppl': {'perplexity': 28.624, 'ref_perplexity': 8.7659}, 'bertscore': {'precision': 84.9301, 'recall': 86.5641, 'f1': 85.7094}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 42.2703, 'rouge2': 20.5631, 'rougeL': 34.5808, 'rougeLsum': 38.1286}, 'ppl': {'perplexity': 5.1589, 'ref_perplexity': 7.3491}, 'bertscore': {'precision': 87.8273, 'recall': 87.9294, 'f1': 87.8527}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 44.1892, 'rouge2': 21.4124, 'rougeL': 35.7822, 'rougeLsum': 39.9082}, 'ppl': {'perplexity': 3.6509, 'ref_perplexity': 6.9402}, 'bertscore': {'precision': 88.1509, 'recall': 88.2842, 'f1': 88.1918}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 44.8072, 'rouge2': 21.4229, 'rougeL': 36.2877, 'rougeLsum': 40.552}, 'ppl': {'perplexity': 4.288, 'ref_perplexity': 6.7725}, 'bertscore': {'precision': 88.5264, 'recall': 88.3506, 'f1': 88.4208}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 45.0877, 'rouge2': 21.7538, 'rougeL': 36.3704, 'rougeLsum': 40.6367}, 'ppl': {'perplexity': 3.8836, 'ref_perplexity': 6.702}, 'bertscore': {'precision': 88.5211, 'recall': 88.4692, 'f1': 88.4778}}

Start Predicting!
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round 3
Start Training!
Sample 507 of the training set: {'input_ids': [21603, 10, 3320, 279, 13224, 7, 107, 834, 20162, 6415, 754, 7786, 572, 16, 846, 25, 43, 4910, 1180, 8, 5835, 1755, 183, 3777, 45, 301, 4882, 12, 301, 11120, 3, 5, 148, 1727, 12, 661, 8, 717, 3, 5, 5, 572, 58, 3320, 1752, 4201, 4959, 2840, 43, 25, 894, 251, 58, 101, 31, 60, 341, 2699, 48, 313, 11, 43, 29, 31, 17, 1943, 959, 12, 8, 15943, 58, 3, 2, 434, 77, 26, 7, 3320, 279, 13224, 7, 107, 834, 20162, 6415, 332, 9889, 12, 484, 7534, 383, 1332, 846, 11, 5839, 347, 3320, 279, 13224, 7, 107, 834, 20162, 6415, 94, 1330, 24, 25, 33, 10847, 1180, 8, 3777, 344, 2208, 189, 3, 89, 15, 115, 11, 2059, 189, 1332, 846, 3320, 1752, 4201, 4959, 2018, 17906, 6, 8032, 25, 31, 60, 578, 982, 5038, 39, 7534, 5, 863, 574, 69, 7107, 372, 113, 31, 195, 36, 7739, 3320, 1752, 4201, 4959, 1095, 12, 199, 25, 5, 2001, 30, 8, 826, 1309, 21, 70, 574, 1030, 4893, 1303, 17, 5, 509, 87, 15, 956, 566, 17, 7075, 29, 2247, 448, 439, 5, 2, 683, 32, 204, 13311, 3320, 279, 13224, 7, 107, 834, 20162, 6415, 933, 417, 3, 99, 79, 54, 199, 38, 79, 54, 22, 17, 484, 150, 3, 13957, 7534, 3, 5, 5, 48, 19, 81, 8145, 22, 7, 1291, 12, 1190, 1180, 8, 5835, 1755, 183, 3777, 45, 301, 4882, 3320, 1752, 4201, 4959, 2018, 17906, 5, 148, 22, 195, 43, 12, 320, 12, 46, 2433, 3777, 258, 5, 11342, 12, 26963, 25, 5, 3, 2, 9168, 2617, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [7327, 19, 3558, 572, 8, 3777, 65, 118, 4910, 1180, 45, 301, 4882, 12, 301, 11120, 16, 846, 44, 5835, 1755, 183, 5, 8628, 3864, 12, 1214, 30, 8, 826, 787, 1309, 21, 574, 1030, 13, 70, 1085, 372, 6, 3, 99, 59, 79, 54, 320, 21, 46, 2433, 3777, 5, 1]}.
***** Running training *****
  Num examples = 792
  Num Epochs = 5
  Instantaneous batch size per device = 8
  Total train batch size (w. parallel, distributed & accumulation) = 8
  Gradient Accumulation steps = 1
  Total optimization steps = 495
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 31.2069, 'rouge2': 13.7109, 'rougeL': 24.7305, 'rougeLsum': 27.7753}, 'ppl': {'perplexity': 72.5224, 'ref_perplexity': 7.5044}, 'bertscore': {'precision': 85.3194, 'recall': 86.0783, 'f1': 85.6648}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 41.3827, 'rouge2': 21.3206, 'rougeL': 34.3963, 'rougeLsum': 37.9157}, 'ppl': {'perplexity': 4.5334, 'ref_perplexity': 6.2565}, 'bertscore': {'precision': 87.9127, 'recall': 87.4893, 'f1': 87.6772}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 43.3022, 'rouge2': 21.4655, 'rougeL': 35.3405, 'rougeLsum': 39.1065}, 'ppl': {'perplexity': 3.9457, 'ref_perplexity': 5.8079}, 'bertscore': {'precision': 88.6714, 'recall': 87.7823, 'f1': 88.206}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 44.1378, 'rouge2': 22.5504, 'rougeL': 36.2728, 'rougeLsum': 40.4055}, 'ppl': {'perplexity': 5.3658, 'ref_perplexity': 5.648}, 'bertscore': {'precision': 88.7936, 'recall': 88.018, 'f1': 88.3857}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 44.4921, 'rouge2': 23.2365, 'rougeL': 36.618, 'rougeLsum': 40.894}, 'ppl': {'perplexity': 4.7604, 'ref_perplexity': 5.6023}, 'bertscore': {'precision': 89.0146, 'recall': 88.0328, 'f1': 88.5032}}

Start Predicting!
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round 4
Start Training!
Sample 779 of the training set: {'input_ids': [21603, 10, 27, 183, 578, 8, 167, 16, 89, 459, 1014, 351, 28, 3320, 8123, 9, 8892, 29582, 30, 8, 951, 113, 12409, 17, 1988, 79, 278, 31, 17, 240, 3358, 30, 1884, 3088, 5, 25144, 58, 4893, 1303, 17, 5, 509, 87, 134, 21274, 17, 23927, 371, 26, 107, 3320, 8123, 9, 8892, 29582, 27, 718, 314, 716, 977, 28, 46, 962, 3, 184, 4624, 117, 47, 1219, 3, 99, 34, 399, 15777, 12, 580, 223, 78, 27, 410, 12, 36, 1219, 3320, 8123, 9, 8892, 29582, 744, 31, 17, 240, 1368, 13, 24, 58, 3320, 27181, 20829, 27, 31, 51, 8032, 12, 217, 48, 55, 863, 752, 178, 214, 125, 8, 6138, 13, 39, 580, 19, 6, 62, 31, 26, 114, 12, 199, 3, 99, 62, 54, 5, 3, 2, 20293, 3320, 8123, 9, 8892, 29582, 621, 11721, 2627, 140, 30, 1520, 21, 885, 12, 3479, 676, 230, 3320, 8123, 9, 8892, 29582, 987, 7, 3, 99, 79, 54, 580, 140, 223, 16, 46, 1781, 4893, 1303, 17, 5, 509, 13311, 107, 107, 308, 357, 517, 40, 32, 1824, 683, 3320, 8123, 9, 8892, 29582, 37, 6138, 19, 24, 27, 31, 51, 59, 271, 2139, 11, 27, 278, 31, 17, 214, 149, 1307, 12, 129, 199, 5, 3320, 8123, 9, 8892, 29582, 27, 2541, 95, 1380, 6, 103, 25, 59, 43, 3358, 45, 82, 951, 580, 314, 716, 977, 58, 37, 3852, 243, 96, 1123, 278, 31, 17, 103, 24, 121, 27, 31, 51, 8032, 3, 9, 349, 38, 600, 233, 3320, 8123, 9, 8892, 29582, 3, 233, 9, 7, 3320, 2596, 3449, 2658, 405, 59, 453, 3358, 30, 884, 3088, 58, 148, 43, 530, 12, 36, 29744, 140, 5, 3320, 8123, 9, 8892, 29582, 3320, 2596, 3449, 2658, 27, 183, 59, 4281, 16807, 30, 136, 1876, 9701, 45, 1663, 7809, 3, 184, 4624, 117, 8, 336, 3852, 27, 5468, 28, 3290, 31, 17, 2025, 140, 12, 8, 20810, 20, 102, 5, 3320, 27181, 20829, 27, 31, 51, 8032, 25, 9355, 31, 17, 10250, 5, 3963, 79, 370, 3, 9, 1053, 58, 421, 3, 18752, 725, 3066, 65, 1643, 951, 380, 716, 5, 3, 2, 4815, 3320, 8123, 9, 8892, 29582, 451, 243, 96, 196, 641, 5468, 12, 82, 14640, 121, 116, 27, 1380, 160, 572, 27, 2654, 31, 17, 36, 10250, 5, 3320, 8123, 9, 8892, 29582, 304, 36, 964, 6, 8, 3852, 7, 27, 5468, 28, 314, 3, 18745, 977, 130, 248, 11, 130, 8, 2102, 113, 5259, 27, 580, 223, 3, 99, 8, 962, 399, 15777, 5, 3320, 8123, 9, 8892, 29582, 37, 962, 399, 15777, 6, 27, 718, 223, 3, 184, 4624, 117, 3, 3565, 140, 2178, 125, 82, 1884, 21362, 47, 6, 8, 568, 14986, 82, 746, 3, 184, 4624, 117, 8, 685, 27, 141, 131, 233, 3320, 8123, 9, 8892, 29582, 2767, 190, 66, 8, 2245, 314, 3, 18745, 977, 3, 184, 4624, 117, 6229, 12, 3, 9, 4943, 1446, 13, 3, 26243, 140, 12, 380, 24, 228, 199, 5, 3320, 8123, 9, 8892, 29582, 27, 31, 51, 3, 9, 307, 715, 3427, 1144, 113, 31, 7, 1086, 373, 141, 1465, 2704, 28, 39, 884, 313, 871, 5, 100, 47, 59, 80, 13, 135, 5, 3320, 8123, 9, 8892, 29582, 275, 72, 16591, 19, 24, 1446, 13, 1735, 140, 12, 3, 9, 3, 7407, 114, 167, 688, 43, 12, 1843, 8, 962, 6, 25, 43, 140, 11652, 8776, 53, 12, 25, 3320, 8123, 9, 8892, 29582, 4073, 3, 13133, 6, 3, 99, 24, 31, 7, 149, 25, 14371, 9, 2174, 34, 57, 66, 598, 5, 27, 31, 51, 131, 1119, 12, 129, 4471, 12, 82, 384, 16, 6045, 3, 2, 147, 270, 5, 4893, 1303, 17, 5, 509, 87, 76, 948, 7, 17, 226, 4, 40, 3959, 439, 3320, 27181, 20829, 156, 25, 31, 26, 114, 12, 6, 473, 339, 12, 3, 7407, 178, 5, 101, 31, 60, 270, 12, 199, 16, 136, 194, 62, 54, 6, 2199, 62, 278, 31, 17, 43, 592, 12, 39, 905, 5, 3, 2, 4633, 3320, 27181, 20829, 863, 752, 178, 214, 125, 251, 47, 937, 728, 25, 911, 3, 9, 580, 223, 5, 101, 241, 12, 766, 48, 19, 13803, 21, 25, 5, 3, 2, 4633, 3320, 8123, 9, 8892, 29582, 148, 103, 214, 25, 43, 12, 1130, 140, 21, 140, 12, 3, 7407, 25, 269, 58, 14375, 27, 133, 31, 162, 612, 34, 3, 2568, 977, 5, 3320, 27181, 20829, 27, 31, 162, 9367, 1223, 16324, 6, 2194, 13287, 55, 863, 278, 31, 17, 560, 905, 6280, 251, 5, 3, 2, 6858, 4893, 1303, 17, 5, 509, 14785, 4, 63, 3612, 517, 157, 658, 567, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [7327, 19, 24184, 81, 8, 351, 28, 8, 18861, 199, 30, 8, 951, 113, 103, 59, 1217, 3358, 30, 1884, 3088, 5, 8628, 3250, 24, 3, 5200, 725, 3066, 65, 1643, 951, 380, 716, 11, 92, 4568, 12, 752, 135, 214, 125, 251, 47, 937, 116, 79, 911, 3, 9, 580, 223, 5, 1]}.
***** Running training *****
  Num examples = 792
  Num Epochs = 5
  Instantaneous batch size per device = 8
  Total train batch size (w. parallel, distributed & accumulation) = 8
  Gradient Accumulation steps = 1
  Total optimization steps = 495
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 33.0986, 'rouge2': 13.8641, 'rougeL': 27.0252, 'rougeLsum': 29.6133}, 'ppl': {'perplexity': 53.9761, 'ref_perplexity': 8.0408}, 'bertscore': {'precision': 85.3287, 'recall': 86.5737, 'f1': 85.9205}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 42.2081, 'rouge2': 20.5024, 'rougeL': 34.8784, 'rougeLsum': 38.1656}, 'ppl': {'perplexity': 9.0025, 'ref_perplexity': 6.5826}, 'bertscore': {'precision': 87.5378, 'recall': 87.9265, 'f1': 87.7145}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 45.7386, 'rouge2': 23.7733, 'rougeL': 38.1065, 'rougeLsum': 41.9102}, 'ppl': {'perplexity': 5.4283, 'ref_perplexity': 6.1441}, 'bertscore': {'precision': 88.8237, 'recall': 88.5617, 'f1': 88.6733}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 47.1457, 'rouge2': 24.6225, 'rougeL': 39.3867, 'rougeLsum': 43.2971}, 'ppl': {'perplexity': 5.3137, 'ref_perplexity': 5.9619}, 'bertscore': {'precision': 89.0838, 'recall': 88.6346, 'f1': 88.8442}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 47.0358, 'rouge2': 25.0534, 'rougeL': 39.5699, 'rougeLsum': 43.6066}, 'ppl': {'perplexity': 4.7802, 'ref_perplexity': 5.9159}, 'bertscore': {'precision': 89.0299, 'recall': 88.6147, 'f1': 88.8027}}

Start Predicting!
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round 5
Start Training!
Sample 460 of the training set: {'input_ids': [21603, 10, 22565, 313, 44, 332, 210, 63, 2590, 5939, 48, 6366, 3, 18, 150, 4142, 871, 30, 3, 184, 4624, 117, 10069, 1437, 3, 6319, 12, 962, 563, 1097, 3500, 1603, 58, 3320, 517, 15472, 29582, 1713, 1033, 920, 3320, 3707, 2445, 4271, 2018, 5531, 5, 11342, 21, 48, 5, 156, 25, 54, 31, 17, 1242, 8, 4142, 25, 174, 44, 8, 2478, 25, 54, 1242, 30, 18, 1976, 45, 3, 9, 21942, 127, 5, 9765, 3320, 517, 15472, 29582, 7102, 9765, 6, 2763, 25, 5, 737, 31, 17, 14529, 24, 3, 184, 4624, 117, 737, 31, 17, 241, 3, 9, 1399, 78, 62, 66, 2944, 423, 594, 3500, 5, 959, 62, 54, 103, 58, 3320, 3707, 2445, 4271, 156, 25, 1299, 1030, 11, 8167, 13, 8, 3500, 12, 3, 834, 834, 15, 1963, 834, 834, 6, 69, 7327, 4224, 2271, 54, 8031, 3, 9, 7147, 13, 8, 1750, 5, 312, 210, 3320, 517, 15472, 29582, 248, 6, 2763, 25, 9765, 5, 231, 394, 313, 30, 3046, 34, 1330, 3, 2, 3320, 3707, 2445, 4271, 156, 34, 31, 7, 1842, 11, 3, 15, 13251, 21, 69, 475, 19, 9961, 6, 27, 54, 103, 48, 230, 5, 27, 31, 26, 131, 174, 3, 9, 1554, 13, 8, 3500, 5, 9765, 3320, 517, 15472, 29582, 2049, 9765, 6, 24, 31, 7, 248, 713, 3, 23, 317, 8, 7147, 11246, 394, 5, 2763, 25, 182, 231, 21, 39, 3607, 26719, 3320, 3707, 2445, 4271, 465, 17168, 5, 148, 31, 60, 2222, 5, 9765, 5, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [7327, 19, 24184, 81, 8, 313, 213, 132, 19, 150, 4142, 871, 915, 11, 10069, 1437, 19, 3, 6319, 12, 962, 8, 3500, 5, 8628, 2315, 24, 3, 99, 79, 370, 1030, 11, 8167, 13, 8, 3500, 12, 937, 791, 1115, 8, 7327, 380, 372, 56, 8031, 21, 8, 7147, 5, 1]}.
***** Running training *****
  Num examples = 792
  Num Epochs = 5
  Instantaneous batch size per device = 8
  Total train batch size (w. parallel, distributed & accumulation) = 8
  Gradient Accumulation steps = 1
  Total optimization steps = 495
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 32.2367, 'rouge2': 12.5531, 'rougeL': 24.1026, 'rougeLsum': 28.1892}, 'ppl': {'perplexity': 8.961, 'ref_perplexity': 8.198}, 'bertscore': {'precision': 84.5347, 'recall': 86.6235, 'f1': 85.5337}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 40.4001, 'rouge2': 18.2561, 'rougeL': 32.1333, 'rougeLsum': 36.0516}, 'ppl': {'perplexity': 20.9055, 'ref_perplexity': 6.8804}, 'bertscore': {'precision': 87.6862, 'recall': 87.8628, 'f1': 87.7497}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 44.7854, 'rouge2': 22.0814, 'rougeL': 36.4362, 'rougeLsum': 40.2788}, 'ppl': {'perplexity': 3.2245, 'ref_perplexity': 6.4587}, 'bertscore': {'precision': 88.3801, 'recall': 88.5381, 'f1': 88.4395}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 45.2733, 'rouge2': 22.2519, 'rougeL': 36.9986, 'rougeLsum': 40.9657}, 'ppl': {'perplexity': 9.3004, 'ref_perplexity': 6.2877}, 'bertscore': {'precision': 88.781, 'recall': 88.5155, 'f1': 88.63}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 44.825, 'rouge2': 21.7127, 'rougeL': 36.6297, 'rougeLsum': 40.7037}, 'ppl': {'perplexity': 9.1587, 'ref_perplexity': 6.2458}, 'bertscore': {'precision': 88.7483, 'recall': 88.4083, 'f1': 88.5603}}

Start Predicting!
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round 6
Start Training!
Sample 483 of the training set: {'input_ids': [21603, 10, 3320, 2596, 3390, 3341, 5090, 58, 27, 31, 162, 141, 3, 9, 8001, 1242, 82, 2118, 68, 79, 31, 60, 16, 5308, 68, 82, 6437, 7173, 1270, 163, 5, 1072, 27, 9179, 406, 3, 60, 19984, 58, 3320, 3707, 3390, 4560, 9459, 6, 25, 54, 539, 3, 9, 9179, 5878, 1690, 6, 36, 417, 12, 1569, 39, 8001, 12, 752, 135, 214, 125, 65, 2817, 7739, 3320, 3707, 3390, 4560, 204, 13311, 99, 25, 241, 12, 4383, 4422, 1427, 163, 25, 54, 1738, 48, 28, 39, 8001, 1502, 4893, 1303, 17, 5, 509, 87, 52, 354, 434, 75, 1265, 40, 517, 683, 122, 7, 3, 2, 134, 279, 3320, 188, 11049, 279, 9, 63, 282, 25, 54, 217, 6437, 7173, 4422, 442, 545, 163, 4893, 1303, 17, 5, 509, 87, 448, 519, 7331, 354, 23, 354, 7, 63, 254, 3320, 188, 11049, 279, 9, 63, 264, 27, 31, 162, 474, 16, 3, 9, 15565, 1690, 11, 3, 12655, 8, 8001, 28, 46, 7295, 572, 6, 68, 125, 2906, 3, 99, 79, 341, 241, 12, 8669, 58, 3320, 3707, 3390, 4560, 3, 3985, 163, 1270, 442, 545, 1182, 744, 31, 17, 2463, 6094, 45, 119, 1440, 45, 2647, 7249, 42, 2611, 6, 25, 56, 174, 12, 2270, 17637, 3320, 3707, 3390, 4560, 204, 13311, 39, 8001, 1502, 5, 1563, 178, 214, 3, 99, 25, 33, 578, 3169, 9179, 53, 11, 62, 56, 240, 3, 9, 4645, 320, 3, 2, 134, 279, 3320, 188, 11049, 279, 9, 63, 27, 31, 162, 11173, 15565, 13339, 5, 19099, 12381, 31, 17, 1866, 780, 6161, 6, 68, 38, 13, 780, 65, 29, 31, 17, 11318, 5, 27, 31, 195, 453, 25, 1694, 5, 3320, 3707, 3390, 4560, 1651, 6, 103, 453, 178, 3250, 3, 2, 134, 279, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [7327, 19, 16, 1169, 1007, 81, 9179, 697, 46, 455, 28, 3, 9, 315, 8001, 788, 12, 128, 14497, 5, 8628, 2315, 12, 539, 9179, 1690, 11, 12, 3261, 8, 8001, 81, 8, 14497, 5, 1]}.
***** Running training *****
  Num examples = 792
  Num Epochs = 5
  Instantaneous batch size per device = 8
  Total train batch size (w. parallel, distributed & accumulation) = 8
  Gradient Accumulation steps = 1
  Total optimization steps = 495
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 34.5527, 'rouge2': 17.3243, 'rougeL': 28.2201, 'rougeLsum': 31.6364}, 'ppl': {'perplexity': 57.8506, 'ref_perplexity': 7.8631}, 'bertscore': {'precision': 85.4325, 'recall': 86.8744, 'f1': 86.1193}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 41.2741, 'rouge2': 20.9479, 'rougeL': 34.5793, 'rougeLsum': 37.5607}, 'ppl': {'perplexity': 14.52, 'ref_perplexity': 6.5815}, 'bertscore': {'precision': 87.4456, 'recall': 87.5432, 'f1': 87.4704}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 44.7988, 'rouge2': 23.2492, 'rougeL': 37.374, 'rougeLsum': 40.9767}, 'ppl': {'perplexity': 4.4204, 'ref_perplexity': 6.1794}, 'bertscore': {'precision': 88.4942, 'recall': 88.1242, 'f1': 88.2935}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 46.514, 'rouge2': 24.9194, 'rougeL': 38.8605, 'rougeLsum': 42.6831}, 'ppl': {'perplexity': 4.1327, 'ref_perplexity': 6.0188}, 'bertscore': {'precision': 88.8247, 'recall': 88.5787, 'f1': 88.6884}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 46.5436, 'rouge2': 25.1834, 'rougeL': 39.4655, 'rougeLsum': 42.8373}, 'ppl': {'perplexity': 4.5051, 'ref_perplexity': 5.9803}, 'bertscore': {'precision': 89.1294, 'recall': 88.5607, 'f1': 88.8323}}

Start Predicting!
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round 7
Start Training!
Sample 667 of the training set: {'input_ids': [21603, 10, 3320, 20162, 188, 7, 23, 9, 134, 413, 1493, 149, 103, 3, 23, 281, 81, 6063, 15470, 30, 8, 337, 3777, 1107, 223, 45, 2701, 2520, 76, 3320, 4122, 4060, 3076, 6557, 120, 1845, 69, 437, 60, 3, 9, 102, 4137, 7, 21, 8, 7230, 16, 8776, 53, 12, 39, 10657, 5, 101, 857, 25, 31, 60, 479, 21, 691, 16, 27755, 5, 3320, 4122, 4060, 3076, 148, 54, 143, 8, 826, 5038, 1112, 30, 96, 7296, 545, 82, 21056, 121, 7736, 86, 12, 6288, 3, 184, 122, 17, 117, 19607, 499, 21056, 3, 184, 122, 17, 117, 184, 122, 17, 117, 184, 122, 17, 117, 3320, 4122, 4060, 3076, 5073, 4921, 3, 184, 122, 17, 117, 1738, 3143, 3, 184, 122, 17, 117, 20773, 18, 7638, 7, 3, 184, 122, 17, 117, 27755, 3, 184, 122, 17, 117, 42, 752, 178, 214, 39, 5038, 381, 6, 5327, 617, 30, 7, 6, 10837, 31, 7, 564, 3, 184, 122, 17, 117, 184, 122, 17, 117, 184, 122, 17, 117, 3320, 4122, 4060, 3076, 11, 833, 13, 3879, 6, 84, 2393, 1009, 3, 7407, 11, 25, 56, 36, 11752, 14031, 5, 1333, 18, 10499, 9, 3320, 20162, 188, 7, 23, 9, 134, 413, 1493, 7617, 2520, 76, 12, 10159, 9, 21642, 3320, 4122, 4060, 3076, 2018, 262, 8155, 6, 164, 62, 43, 8, 5038, 381, 11, 39, 6241, 3, 18256, 58, 3, 18, 11251, 23, 3320, 20162, 188, 7, 23, 9, 134, 413, 1493, 27, 43, 59, 263, 136, 5038, 780, 68, 8036, 17, 19, 8, 583, 399, 9147, 42, 149, 405, 34, 281, 81, 58, 3320, 4122, 4060, 3076, 2018, 3, 6, 37, 1917, 21, 69, 27755, 18651, 54, 36, 1069, 270, 3, 10, 4893, 1303, 17, 5, 509, 87, 354, 16568, 1824, 448, 8855, 956, 26, 226, 3, 5, 1333, 3, 18, 465, 26, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [7327, 19, 4403, 12, 484, 3, 9, 3777, 10159, 9, 21642, 11, 21, 24, 884, 2746, 12, 214, 149, 8, 5038, 56, 36, 114, 583, 399, 9147, 42, 149, 405, 34, 281, 81, 5, 8628, 3250, 8, 2245, 12, 281, 190, 12, 483, 5038, 11, 787, 8889, 12, 1080, 21, 27755, 18651, 5, 1]}.
***** Running training *****
  Num examples = 792
  Num Epochs = 5
  Instantaneous batch size per device = 8
  Total train batch size (w. parallel, distributed & accumulation) = 8
  Gradient Accumulation steps = 1
  Total optimization steps = 495
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 32.9955, 'rouge2': 15.1823, 'rougeL': 27.3618, 'rougeLsum': 30.0542}, 'ppl': {'perplexity': 36.5816, 'ref_perplexity': 8.6441}, 'bertscore': {'precision': 85.4642, 'recall': 86.6259, 'f1': 86.0189}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 39.8533, 'rouge2': 18.1498, 'rougeL': 32.0103, 'rougeLsum': 36.0598}, 'ppl': {'perplexity': 4.1964, 'ref_perplexity': 7.1379}, 'bertscore': {'precision': 87.4431, 'recall': 87.3743, 'f1': 87.3841}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 44.9647, 'rouge2': 21.4546, 'rougeL': 36.4038, 'rougeLsum': 40.9666}, 'ppl': {'perplexity': 4.8812, 'ref_perplexity': 6.6954}, 'bertscore': {'precision': 88.7373, 'recall': 88.2715, 'f1': 88.488}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 45.1522, 'rouge2': 21.4996, 'rougeL': 36.797, 'rougeLsum': 41.0013}, 'ppl': {'perplexity': 4.3747, 'ref_perplexity': 6.4995}, 'bertscore': {'precision': 88.8164, 'recall': 88.2921, 'f1': 88.5381}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 45.3591, 'rouge2': 22.0598, 'rougeL': 37.2975, 'rougeLsum': 41.4877}, 'ppl': {'perplexity': 4.0753, 'ref_perplexity': 6.4482}, 'bertscore': {'precision': 89.1243, 'recall': 88.3614, 'f1': 88.7251}}

Start Predicting!
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round 8
Start Training!
Sample 388 of the training set: {'input_ids': [21603, 10, 3320, 17838, 834, 29582, 1245, 65, 29, 22, 17, 646, 8, 166, 2478, 11, 1480, 641, 5, 26789, 757, 3320, 4448, 3769, 3072, 2018, 1079, 6, 84, 2412, 33, 25, 30, 58, 3, 2, 4633, 3320, 17838, 834, 29582, 9825, 2336, 40, 32, 32, 3320, 17838, 834, 29582, 94, 22, 7, 28218, 30, 13368, 3320, 4448, 3769, 3072, 11342, 21, 8, 7230, 1079, 6, 48, 19, 250, 8, 2412, 47, 1480, 91, 13, 8, 14089, 48, 1379, 5, 3, 2, 4633, 3320, 17838, 834, 29582, 3359, 207, 5, 466, 656, 34, 66, 3, 1825, 258, 1603, 1008, 22, 17, 3516, 81, 8, 1450, 866, 13, 151, 24, 56, 230, 36, 1480, 3320, 17838, 834, 29582, 264, 572, 19, 230, 129, 53, 865, 323, 8, 689, 5, 3320, 4448, 3769, 3072, 6984, 12, 3140, 9825, 1480, 39, 2412, 47, 1187, 3, 9, 350, 15472, 313, 5, 148, 33, 150, 1200, 1187, 48, 2412, 11, 225, 2615, 150, 856, 97, 5, 3, 2, 4633, 3320, 17838, 834, 29582, 8012, 39, 4879, 19, 1517, 3, 9, 1551, 315, 1053, 21, 8, 7230, 5, 5882, 12, 129, 39, 1937, 2541, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [7327, 19, 24184, 81, 8, 7230, 2412, 84, 65, 59, 646, 8, 166, 2478, 780, 5, 8628, 3864, 24, 788, 12, 3140, 1183, 1480, 70, 2412, 47, 1187, 3, 9, 350, 15472, 313, 11, 3864, 24, 79, 33, 150, 1200, 1187, 24, 2412, 11, 225, 2615, 150, 856, 97, 5, 1]}.
***** Running training *****
  Num examples = 792
  Num Epochs = 5
  Instantaneous batch size per device = 8
  Total train batch size (w. parallel, distributed & accumulation) = 8
  Gradient Accumulation steps = 1
  Total optimization steps = 495
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 32.5693, 'rouge2': 14.1287, 'rougeL': 26.0652, 'rougeLsum': 29.2153}, 'ppl': {'perplexity': 22.4279, 'ref_perplexity': 9.4248}, 'bertscore': {'precision': 84.7055, 'recall': 85.6464, 'f1': 85.1402}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 39.7742, 'rouge2': 18.4132, 'rougeL': 32.0012, 'rougeLsum': 34.9272}, 'ppl': {'perplexity': 8.726, 'ref_perplexity': 7.8237}, 'bertscore': {'precision': 87.5229, 'recall': 87.6651, 'f1': 87.5649}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 44.3477, 'rouge2': 20.8757, 'rougeL': 35.9198, 'rougeLsum': 40.0724}, 'ppl': {'perplexity': 40.5218, 'ref_perplexity': 7.3504}, 'bertscore': {'precision': 88.3854, 'recall': 88.343, 'f1': 88.3425}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 44.2057, 'rouge2': 20.9236, 'rougeL': 35.9801, 'rougeLsum': 39.983}, 'ppl': {'perplexity': 41.7349, 'ref_perplexity': 7.1747}, 'bertscore': {'precision': 88.5739, 'recall': 88.2882, 'f1': 88.411}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 43.9553, 'rouge2': 20.9255, 'rougeL': 35.9264, 'rougeLsum': 39.9051}, 'ppl': {'perplexity': 41.8595, 'ref_perplexity': 7.1276}, 'bertscore': {'precision': 88.468, 'recall': 88.2517, 'f1': 88.3399}}

Start Predicting!
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round 9
Start Training!
Sample 214 of the training set: {'input_ids': [21603, 10, 3320, 20275, 26987, 6597, 28, 25, 16, 18588, 44, 8, 3761, 5, 94, 31, 7, 3, 9, 207, 613, 39, 6380, 19, 28790, 38, 25, 2285, 65, 1327, 21, 10278, 7, 55, 7739, 3320, 15239, 25285, 7739, 27, 31, 51, 8032, 12, 1616, 48, 5, 27, 718, 8, 1595, 11, 4862, 135, 13, 39, 2410, 5, 328, 56, 36, 7232, 91, 12, 25, 10545, 12, 3320, 15239, 25285, 204, 13311, 2497, 48, 856, 5, 1333, 21, 39, 97, 5, 3, 2, 354, 40, 3320, 196, 21855, 15260, 37, 6380, 65, 118, 1237, 11, 263, 424, 8, 12361, 19, 39, 2285, 84, 27, 3382, 19, 2890, 152, 834, 1068, 58, 3, 55, 3320, 15239, 25285, 1333, 21, 39, 3160, 5, 7870, 9552, 34, 65, 118, 2471, 28, 8, 1595, 5453, 51, 17, 11, 66, 4376, 2251, 21, 647, 2848, 5, 3, 2, 354, 40, 3320, 196, 21855, 15260, 1521, 8, 2285, 7, 1068, 640, 66, 8, 5694, 58, 3320, 15239, 25285, 37, 1595, 758, 2082, 7, 11, 1738, 7, 70, 2062, 2285, 5, 100, 19, 59, 1068, 12, 66, 9108, 86, 29, 5694, 5, 1333, 3, 2, 40, 102, 4893, 1303, 17, 5, 509, 13311, 52, 382, 632, 40, 1298, 567, 1298, 15784, 3320, 196, 21855, 15260, 1804, 12, 214, 27, 1049, 28, 25, 3842, 5, 10071, 43, 118, 1287, 3, 115, 17, 210, 3320, 15239, 25285, 1333, 21, 39, 773, 1234, 1587, 69, 871, 5, 37, 5565, 19, 69, 7, 12, 43, 25, 1049, 28, 178, 5, 3, 2, 40, 102, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [7327, 19, 24184, 81, 8, 2285, 84, 65, 1327, 21, 10278, 7, 298, 6597, 28, 135, 16, 18588, 44, 3761, 5, 8628, 3864, 24, 8, 1595, 758, 65, 4187, 11, 65, 2639, 8, 2062, 2285, 84, 19, 59, 1068, 12, 66, 9108, 16, 29, 13300, 5, 1]}.
***** Running training *****
  Num examples = 792
  Num Epochs = 5
  Instantaneous batch size per device = 8
  Total train batch size (w. parallel, distributed & accumulation) = 8
  Gradient Accumulation steps = 1
  Total optimization steps = 495
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 32.9003, 'rouge2': 13.4708, 'rougeL': 25.2128, 'rougeLsum': 29.0735}, 'ppl': {'perplexity': 4.6096, 'ref_perplexity': 10.184}, 'bertscore': {'precision': 85.0801, 'recall': 86.3569, 'f1': 85.678}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 39.0364, 'rouge2': 17.2709, 'rougeL': 31.1218, 'rougeLsum': 35.3931}, 'ppl': {'perplexity': 513.6574, 'ref_perplexity': 8.5462}, 'bertscore': {'precision': 86.4874, 'recall': 87.2046, 'f1': 86.8041}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 40.1932, 'rouge2': 18.0844, 'rougeL': 32.4714, 'rougeLsum': 36.9271}, 'ppl': {'perplexity': 598.6072, 'ref_perplexity': 7.9848}, 'bertscore': {'precision': 87.3593, 'recall': 87.6279, 'f1': 87.4613}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 41.8229, 'rouge2': 19.0797, 'rougeL': 33.6613, 'rougeLsum': 38.1871}, 'ppl': {'perplexity': 564.1662, 'ref_perplexity': 7.786}, 'bertscore': {'precision': 87.6966, 'recall': 87.8857, 'f1': 87.7714}}
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 42.345, 'rouge2': 19.341, 'rougeL': 33.9073, 'rougeLsum': 38.5315}, 'ppl': {'perplexity': 5.9308, 'ref_perplexity': 7.7119}, 'bertscore': {'precision': 87.9027, 'recall': 87.9262, 'f1': 87.9015}}

Start Predicting!
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round 10
Start Training!
Sample 96 of the training set: {'input_ids': [21603, 10, 3, 5, 3320, 382, 15, 3523, 261, 12, 103, 3, 9, 1367, 13, 3711, 5470, 15107, 24, 27, 31, 26, 169, 21, 6506, 55, 8718, 8139, 145, 18163, 7, 5, 2114, 25, 28723, 135, 58, 27, 54, 31, 17, 253, 135, 44, 82, 415, 8505, 7595, 8546, 3320, 2884, 4613, 3449, 2018, 13349, 6, 19, 132, 136, 1253, 24, 48, 19, 8, 556, 25, 31, 60, 479, 21, 10, 4893, 1303, 17, 5, 509, 87, 26, 196, 927, 956, 1298, 32, 2079, 122, 667, 1333, 6, 3104, 440, 3320, 382, 15, 3523, 465, 34, 47, 46, 5470, 1367, 28, 3, 9, 15779, 2182, 13, 3711, 5470, 15107, 55, 3320, 382, 15, 3523, 2792, 48, 4893, 1303, 17, 5, 509, 87, 5091, 157, 21447, 51, 75, 927, 51, 553, 3320, 2884, 4613, 3449, 2018, 13349, 6, 27, 31, 162, 7122, 3, 184, 4624, 117, 34, 31, 7, 118, 28723, 45, 69, 620, 5, 27, 31, 51, 3, 27518, 8032, 21, 136, 25741, 2953, 3, 18, 10591, 3320, 382, 15, 3523, 3359, 24, 31, 7, 6902, 6, 27, 31, 51, 6902, 24, 31, 7, 1399, 233, 3, 2, 3320, 2884, 4613, 3449, 11342, 81, 24, 6, 13349, 55, 2114, 3, 9, 207, 239, 3, 18, 10591, 3, 10, 61, 3320, 382, 15, 3523, 10591, 27, 31, 51, 59, 4740, 29, 9, 11761, 82, 239, 530, 4131, 233, 131, 118, 1219, 57, 8, 9360, 1187, 8, 1312, 3, 12460, 3485, 25, 31, 60, 92, 26950, 53, 10763, 9133, 7, 3158, 27, 7, 48, 1176, 8665, 4893, 1303, 17, 5, 509, 87, 683, 357, 32, 371, 727, 52, 3341, 354, 3320, 2884, 4613, 3449, 2018, 13349, 6, 19, 48, 8, 556, 25, 31, 60, 3, 13215, 12, 58, 4893, 1303, 17, 5, 509, 21766, 63, 6282, 15761, 279, 519, 107, 567, 5, 156, 78, 27, 43, 207, 1506, 21, 25, 55, 421, 275, 1890, 8505, 30, 2473, 5994, 341, 1789, 7, 175, 3, 10, 137, 3320, 382, 15, 3523, 27, 1243, 8, 8311, 2102, 25, 54, 805, 147, 8, 1312, 3485, 55, 328, 31, 60, 20, 40, 1273, 11, 3, 9, 1245, 1704, 3074, 21, 116, 27, 31, 51, 3164, 3, 15842, 300, 2309, 55, 3320, 2884, 4613, 3449, 3359, 233, 2091, 16, 24, 495, 27, 43, 128, 1282, 1506, 21, 25, 5, 101, 31, 162, 4910, 3014, 135, 16, 8, 275, 1890, 1078, 983, 3, 99, 25, 3, 7407, 140, 39, 564, 11, 1115, 27, 31, 195, 4303, 39, 1046, 16, 3, 3770, 48, 2118, 223, 3, 10, 137, 12312, 7, 3, 18, 2737, 4893, 1303, 17, 5, 509, 87, 102, 63, 755, 956, 3264, 536, 279, 526, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [7327, 19, 24184, 24, 79, 54, 31, 17, 253, 3, 9, 1367, 13, 3711, 5470, 15107, 24, 47, 169, 21, 6506, 11, 987, 7, 823, 79, 43, 28723, 135, 5, 8628, 3864, 24, 79, 43, 4910, 3014, 135, 11, 983, 3, 99, 79, 3, 7407, 70, 564, 11, 1115, 6, 34, 56, 199, 135, 12, 830, 48, 2118, 223, 5, 1]}.
***** Running training *****
  Num examples = 783
  Num Epochs = 5
  Instantaneous batch size per device = 8
  Total train batch size (w. parallel, distributed & accumulation) = 8
  Gradient Accumulation steps = 1
  Total optimization steps = 490
***** Running testing *****
  Num examples = 96
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 25.9462, 'rouge2': 7.4015, 'rougeL': 18.8025, 'rougeLsum': 22.638}, 'ppl': {'perplexity': 5.3285, 'ref_perplexity': 15.4123}, 'bertscore': {'precision': 83.9765, 'recall': 86.1451, 'f1': 85.027}}
***** Running testing *****
  Num examples = 96
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 33.652, 'rouge2': 11.7253, 'rougeL': 26.0428, 'rougeLsum': 30.2198}, 'ppl': {'perplexity': 6.9774, 'ref_perplexity': 13.0457}, 'bertscore': {'precision': 86.0816, 'recall': 87.7233, 'f1': 86.874}}
***** Running testing *****
  Num examples = 96
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 36.8042, 'rouge2': 13.1145, 'rougeL': 28.4922, 'rougeLsum': 32.8862}, 'ppl': {'perplexity': 5.9311, 'ref_perplexity': 12.1716}, 'bertscore': {'precision': 87.3372, 'recall': 88.1064, 'f1': 87.7055}}
***** Running testing *****
  Num examples = 96
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 37.8932, 'rouge2': 13.5781, 'rougeL': 29.147, 'rougeLsum': 33.9102}, 'ppl': {'perplexity': 4.8773, 'ref_perplexity': 11.9506}, 'bertscore': {'precision': 87.5304, 'recall': 88.2259, 'f1': 87.8631}}
***** Running testing *****
  Num examples = 96
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 38.0166, 'rouge2': 13.7119, 'rougeL': 29.0652, 'rougeLsum': 33.681}, 'ppl': {'perplexity': 5.07, 'ref_perplexity': 11.8751}, 'bertscore': {'precision': 87.3857, 'recall': 88.2909, 'f1': 87.8203}}

Start Predicting!
***** Running testing *****
  Num examples = 96
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round All
Start Training!
Sample 499 of the training set: {'input_ids': [21603, 10, 3320, 16627, 32, 7, 29582, 277, 228, 25, 752, 140, 214, 3, 99, 25, 1672, 8, 16497, 4158, 600, 4158, 10, 489, 1828, 87, 3707, 2596, 12, 36, 223, 16, 1519, 58, 3, 99, 78, 6, 116, 58, 3320, 4165, 4906, 2688, 3, 7094, 63, 9, 6, 62, 33, 578, 128, 72, 1519, 13, 175, 1107, 223, 16, 300, 8, 1849, 13, 1671, 6, 38, 13, 780, 132, 33, 150, 5128, 21, 48, 3, 18, 301, 2551, 3320, 16627, 32, 7, 29582, 277, 1333, 55, 3320, 16627, 32, 7, 29582, 277, 2018, 3413, 6, 136, 2270, 30, 48, 58, 3320, 4165, 4906, 2688, 2018, 6, 27, 7, 48, 1918, 8, 2318, 900, 7708, 9, 14295, 58, 3, 18, 10605, 3320, 16627, 32, 7, 29582, 277, 16497, 600, 4158, 11, 3, 40, 76, 900, 7708, 9, 5, 14125, 2258, 1082, 43, 600, 7328, 3, 2, 3320, 4165, 4906, 2688, 3, 7094, 132, 62, 33, 788, 12, 911, 856, 1519, 1587, 8, 414, 13, 1671, 3, 18, 451, 60, 15, 3320, 16627, 32, 7, 29582, 277, 13, 321, 23365, 2734, 31237, 11, 2318, 900, 7708, 9, 58, 3320, 4165, 4906, 2688, 2018, 6, 4273, 321, 33, 1083, 91, 13, 1519, 788, 12, 224, 306, 2173, 6, 62, 33, 788, 72, 1519, 30, 321, 1173, 182, 1116, 3, 18, 27, 2434, 23, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [7327, 2746, 12, 214, 24, 19, 132, 16497, 600, 4158, 11, 2318, 900, 7708, 9, 12, 36, 223, 16, 8, 1519, 5, 8628, 3864, 24, 321, 33, 1083, 91, 13, 1519, 788, 12, 224, 306, 2173, 11, 8, 1519, 56, 2367, 1587, 8, 414, 13, 8, 1671, 5, 1]}.
***** Running training *****
  Num examples = 879
  Num Epochs = 5
  Instantaneous batch size per device = 8
  Total train batch size (w. parallel, distributed & accumulation) = 8
  Gradient Accumulation steps = 1
  Total optimization steps = 550
***** Running testing *****
  Num examples = 110
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 34.7875, 'rouge2': 16.5001, 'rougeL': 28.1645, 'rougeLsum': 31.5582}, 'ppl': {'perplexity': 14682.873, 'ref_perplexity': 7.7761}, 'bertscore': {'precision': 85.6538, 'recall': 87.023, 'f1': 86.2995}}
***** Running testing *****
  Num examples = 110
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 41.7503, 'rouge2': 20.7381, 'rougeL': 34.7436, 'rougeLsum': 38.4409}, 'ppl': {'perplexity': 4.4511, 'ref_perplexity': 6.5072}, 'bertscore': {'precision': 88.2164, 'recall': 88.0433, 'f1': 88.1114}}
***** Running testing *****
  Num examples = 110
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 44.6639, 'rouge2': 22.5488, 'rougeL': 36.9016, 'rougeLsum': 40.9976}, 'ppl': {'perplexity': 2.936, 'ref_perplexity': 6.1056}, 'bertscore': {'precision': 88.9023, 'recall': 88.5652, 'f1': 88.7169}}
***** Running testing *****
  Num examples = 110
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 48.068, 'rouge2': 24.6198, 'rougeL': 39.0323, 'rougeLsum': 43.6035}, 'ppl': {'perplexity': 2.602, 'ref_perplexity': 5.9956}, 'bertscore': {'precision': 89.0544, 'recall': 88.984, 'f1': 89.0063}}
***** Running testing *****
  Num examples = 110
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 48.6187, 'rouge2': 24.9847, 'rougeL': 39.4803, 'rougeLsum': 44.1315}, 'ppl': {'perplexity': 2.9805, 'ref_perplexity': 5.9552}, 'bertscore': {'precision': 89.1525, 'recall': 89.0436, 'f1': 89.0857}}

Start Predicting!
***** Running testing *****
  Num examples = 110
  Instantaneous batch size per device = 4
  Total eval batch size = 4
***** Running testing *****
  Num examples = 110
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Parameter 'function'=<function get_datasets.<locals>.preprocess_function at 0x741b1b652e50> of the transform datasets.arrow_dataset.Dataset._map_single couldn't be hashed properly, a random hash was used instead. Make sure your transforms and parameters are serializable with pickle or dill for the dataset fingerprinting and caching to work. If you reuse this transform, the caching mechanism will consider it to be different from the previous calls and recompute everything. This warning is only showed once. Subsequent hashing failures won't be showed.

Start Predicting!
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4





Start Predicting!
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4





Start Predicting!
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4





Start Predicting!
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4





Start Predicting!
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4





Start Predicting!
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4





Start Predicting!
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4





Start Predicting!
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4





Start Predicting!
***** Running testing *****
  Num examples = 87
  Instantaneous batch size per device = 4
  Total eval batch size = 4





Start Predicting!
***** Running testing *****
  Num examples = 96
  Instantaneous batch size per device = 4
  Total eval batch size = 4





Start Predicting!
***** Running testing *****
  Num examples = 110
  Instantaneous batch size per device = 4
  Total eval batch size = 4
***** Running testing *****
  Num examples = 110
  Instantaneous batch size per device = 4
  Total eval batch size = 4




