Parameter 'function'=<function get_datasets.<locals>.preprocess_function at 0x7368675a1f70> of the transform datasets.arrow_dataset.Dataset._map_single couldn't be hashed properly, a random hash was used instead. Make sure your transforms and parameters are serializable with pickle or dill for the dataset fingerprinting and caching to work. If you reuse this transform, the caching mechanism will consider it to be different from the previous calls and recompute everything. This warning is only showed once. Subsequent hashing failures won't be showed.
Round 1
Start Training!
Sample 261 of the training set: {'input_ids': [21603, 10, 363, 47, 8, 7489, 81, 11930, 53, 30, 8, 126, 4322, 7, 116, 79, 130, 12104, 8, 7565, 7, 13, 8, 1895, 4322, 7, 58, 3, 30345, 6674, 25064, 10, 100, 80, 19, 3, 2, 26, 159, 89, 3920, 49, 2, 530, 3, 9, 773, 13, 11930, 114, 3, 9, 8429, 3, 6, 2786, 3440, 10, 283, 51, 18, 107, 635, 3, 6, 114, 8, 2214, 2218, 3, 5, 6674, 25064, 10, 84, 3, 2, 26, 159, 89, 3920, 49, 2, 11475, 3, 5, 2786, 3440, 10, 16036, 3, 5, 6674, 25064, 10, 2432, 11, 3, 2, 26, 159, 89, 3920, 49, 2, 299, 27, 31, 51, 59, 1776, 417, 149, 25, 31, 26, 169, 24, 3, 6, 9199, 11296, 10, 3, 2, 6117, 138, 17481, 2, 2786, 3440, 10, 9710, 34, 31, 7, 773, 9, 114, 11930, 53, 3, 2, 26, 159, 89, 3920, 49, 2, 6674, 25064, 10, 114, 133, 8, 1218, 369, 3, 2, 26, 159, 89, 3920, 49, 2, 2786, 3440, 10, 3, 76, 107, 269, 3, 6, 168, 3, 6, 3, 99, 27, 3, 7, 3, 99, 27, 31, 51, 1631, 13, 8, 269, 80, 3, 6, 27, 31, 162, 530, 8, 337, 589, 16, 851, 13, 82, 3393, 3, 6, 25, 11930, 34, 11, 8, 116, 25, 1535, 8, 1843, 13, 561, 3, 2, 6117, 138, 17481, 2, 2285, 2118, 24, 25, 1457, 3, 6, 25, 2785, 8, 2214, 13, 8, 11930, 3, 5, 6674, 25064, 10, 412, 107, 18, 28848, 3, 6, 24, 31, 7, 114, 8, 301, 834, 254, 834, 308, 834, 80, 3, 6, 2786, 3440, 10, 5068, 3, 6, 8957, 3, 5, 6674, 25064, 10, 19, 34, 3, 58, 299, 8, 80, 666, 24, 65, 530, 114, 3, 2, 6117, 138, 17481, 2, 3, 9, 385, 11930, 1681, 30, 8, 596, 3, 5, 299, 27, 26451, 24, 8, 3621, 398, 369, 95, 30, 8, 332, 834, 553, 834, 1641, 3, 5, 4329, 10, 3, 2, 6117, 138, 17481, 2, 11475, 3, 5, 2786, 3440, 10, 11475, 3, 6, 3, 24745, 3, 5, 6674, 25064, 10, 27, 317, 24, 31, 7, 125, 24, 19, 3, 5, 264, 175, 33, 131, 3, 9, 360, 912, 3, 5, 7204, 24, 31, 7, 131, 882, 13006, 2346, 3, 6, 7592, 3, 6, 1416, 882, 628, 18, 545, 63, 3, 6, 68, 396, 186, 10634, 3, 6, 27, 317, 30, 24, 80, 3, 5, 9199, 11296, 10, 412, 107, 34, 1416, 3, 14390, 3, 5, 2786, 3440, 10, 11475, 3, 6, 1416, 114, 3, 76, 107, 1416, 114, 424, 91, 13, 3, 9, 8757, 3, 5, 3, 2, 6117, 138, 17481, 2, 6674, 25064, 10, 11475, 3, 6, 34, 405, 320, 773, 13, 5107, 3, 5, 9199, 11296, 10, 3, 2, 6117, 138, 17481, 2, 94, 1416, 114, 17945, 3, 2, 122, 9, 102, 2, 3, 5, 4329, 10, 454, 635, 3, 5, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [37, 6674, 25064, 3217, 8, 1933, 13, 80, 773, 13, 4322, 7, 28, 11930, 7, 30, 34, 6, 464, 38, 8, 2214, 10634, 5, 156, 8, 3674, 1114, 12, 253, 3, 9, 824, 2118, 6, 79, 131, 906, 12, 11930, 34, 11, 116, 79, 3495, 8, 831, 2102, 6, 79, 3, 8918, 8, 2214, 13, 8, 11930, 5, 1875, 8, 372, 47, 59, 7035, 28, 8, 3243, 6, 2346, 11, 10634, 13, 8, 1895, 6, 79, 66, 4686, 24, 8, 1681, 13, 3, 9, 11930, 47, 3, 9, 207, 800, 5, 1]}.
***** Running training *****
  Num examples = 986
  Num Epochs = 5
  Instantaneous batch size per device = 2
  Total train batch size (w. parallel, distributed & accumulation) = 16
  Gradient Accumulation steps = 8
  Total optimization steps = 310
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 29.3976, 'rouge2': 9.0016, 'rougeL': 19.6653, 'rougeLsum': 25.3546}, 'ppl': {'perplexity': 152.7816, 'ref_perplexity': 18.8616}, 'bertscore': {'precision': 84.767, 'recall': 85.4351, 'f1': 85.0806}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 30.5718, 'rouge2': 9.4798, 'rougeL': 21.0529, 'rougeLsum': 26.2353}, 'ppl': {'perplexity': 477.7369, 'ref_perplexity': 17.4086}, 'bertscore': {'precision': 85.3337, 'recall': 85.5496, 'f1': 85.4243}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 31.6921, 'rouge2': 9.8558, 'rougeL': 21.9008, 'rougeLsum': 27.1505}, 'ppl': {'perplexity': 10.2784, 'ref_perplexity': 16.7672}, 'bertscore': {'precision': 85.9545, 'recall': 85.5955, 'f1': 85.7596}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 31.8328, 'rouge2': 10.0199, 'rougeL': 21.8207, 'rougeLsum': 27.5319}, 'ppl': {'perplexity': 8.5444, 'ref_perplexity': 16.4865}, 'bertscore': {'precision': 86.008, 'recall': 85.6532, 'f1': 85.8168}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 32.2176, 'rouge2': 10.2835, 'rougeL': 22.0336, 'rougeLsum': 27.672}, 'ppl': {'perplexity': 15.4016, 'ref_perplexity': 16.4232}, 'bertscore': {'precision': 86.085, 'recall': 85.6988, 'f1': 85.8764}}

Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round 2
Start Training!
Sample 120 of the training set: {'input_ids': [21603, 10, 363, 410, 2786, 3440, 317, 13, 8, 28297, 13, 8, 1249, 19681, 4322, 610, 2799, 57, 4329, 58, 3, 30345, 2786, 3440, 10, 27, 31, 162, 27, 31, 162, 530, 80, 44, 234, 3, 5, 275, 25, 54, 3, 76, 107, 478, 27, 317, 2641, 315, 1904, 16, 34, 3, 6, 11, 25, 54, 169, 34, 21, 39, 4390, 3, 6, 959, 1307, 3, 5, 6674, 25064, 10, 16036, 3, 6, 17945, 3, 5, 11475, 3, 5, 2786, 3440, 10, 275, 34, 92, 10291, 30, 16, 89, 52, 9, 18, 1271, 3, 6, 78, 25, 43, 12, 530, 8, 385, 1407, 1096, 39, 562, 3, 6, 11, 258, 25, 54, 4368, 34, 45, 8, 1025, 42, 3, 189, 42, 511, 1501, 3, 5, 6674, 25064, 10, 16036, 3, 6, 17945, 3, 5, 4329, 10, 3359, 2786, 3440, 10, 264, 24, 31, 7, 1134, 8198, 116, 25, 43, 3, 9, 671, 1368, 49, 42, 309, 834, 553, 834, 308, 834, 1959, 27552, 11, 25, 31, 162, 530, 3, 9, 1309, 12, 39, 332, 834, 553, 834, 30, 8, 511, 1501, 3, 5, 264, 24, 31, 7, 3, 9, 1134, 8198, 561, 4329, 10, 310, 3, 5, 6674, 25064, 10, 454, 635, 3, 5, 3359, 3, 5, 283, 51, 18, 107, 635, 3, 5, 4329, 10, 11475, 3, 5, 2786, 3440, 10, 589, 3, 5, 3, 2, 6117, 138, 17481, 2, 2432, 68, 163, 8, 27, 317, 24, 3, 99, 25, 54, 474, 315, 773, 13, 1904, 16, 80, 4322, 610, 3, 6, 34, 656, 34, 3, 9, 418, 1842, 38, 168, 3, 5, 94, 31, 7, 3, 76, 107, 3, 2, 26, 159, 89, 3920, 49, 2, 4329, 10, 11475, 3, 5, 6674, 25064, 10, 3359, 3, 5, 2786, 3440, 10, 466, 31, 7, 207, 12, 1423, 3, 5, 4329, 10, 264, 27, 317, 25, 54, 240, 676, 541, 3, 5, 2786, 3440, 10, 11475, 3, 6, 24, 31, 7, 1245, 3, 6, 27, 317, 3, 5, 3, 2, 6117, 138, 17481, 2, 4329, 10, 1541, 34, 31, 7, 39, 613, 3, 5, 2786, 3440, 10, 264, 62, 31, 162, 3, 2, 26, 159, 89, 3920, 49, 2, 62, 241, 315, 3621, 4329, 10, 11475, 3, 5, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [2786, 3440, 5899, 8, 28297, 13, 4329, 31, 7, 800, 13, 8, 1249, 19681, 4322, 610, 6, 11, 865, 3, 88, 92, 1940, 95, 16, 89, 52, 9, 18, 1271, 38, 46, 1231, 2768, 6, 147, 84, 583, 18, 3897, 3228, 47, 7103, 57, 2448, 6, 713, 5, 1]}.
***** Running training *****
  Num examples = 986
  Num Epochs = 5
  Instantaneous batch size per device = 2
  Total train batch size (w. parallel, distributed & accumulation) = 16
  Gradient Accumulation steps = 8
  Total optimization steps = 310
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 26.8282, 'rouge2': 6.7178, 'rougeL': 18.3758, 'rougeLsum': 22.9873}, 'ppl': {'perplexity': 156.0487, 'ref_perplexity': 23.2077}, 'bertscore': {'precision': 83.977, 'recall': 85.3341, 'f1': 84.633}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 27.625, 'rouge2': 7.1142, 'rougeL': 19.325, 'rougeLsum': 23.6525}, 'ppl': {'perplexity': 12.8664, 'ref_perplexity': 21.8851}, 'bertscore': {'precision': 84.5546, 'recall': 85.443, 'f1': 84.9822}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 28.7208, 'rouge2': 7.9757, 'rougeL': 20.1412, 'rougeLsum': 24.6994}, 'ppl': {'perplexity': 27.4733, 'ref_perplexity': 21.3035}, 'bertscore': {'precision': 84.9739, 'recall': 85.5349, 'f1': 85.2381}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 28.8717, 'rouge2': 7.869, 'rougeL': 20.3027, 'rougeLsum': 25.097}, 'ppl': {'perplexity': 12.823, 'ref_perplexity': 21.153}, 'bertscore': {'precision': 85.0342, 'recall': 85.5634, 'f1': 85.2857}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 29.3437, 'rouge2': 8.3764, 'rougeL': 20.8158, 'rougeLsum': 25.7447}, 'ppl': {'perplexity': 12.9344, 'ref_perplexity': 21.0529}, 'bertscore': {'precision': 85.2221, 'recall': 85.6631, 'f1': 85.429}}

Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round 3
Start Training!
Sample 507 of the training set: {'input_ids': [21603, 10, 363, 47, 8, 7385, 13, 2061, 492, 1231, 169, 13, 8, 276, 13535, 58, 3, 30345, 15275, 3899, 5422, 10, 1562, 25, 5, 1804, 1379, 6, 921, 5, 148, 31, 162, 2196, 24, 8, 7385, 13, 2061, 492, 1231, 169, 13, 8, 276, 13535, 3048, 300, 192, 1025, 7, 13, 6980, 11, 2329, 2061, 6, 2530, 24, 3, 9, 1025, 33, 341, 59, 338, 24, 276, 13535, 3762, 5, 1615, 103, 25, 317, 48, 19, 58, 1212, 9203, 52, 11768, 6347, 10, 27, 317, 24, 1843, 13, 7385, 23971, 10423, 7, 12, 8, 2061, 24, 278, 31, 17, 43, 1989, 207, 2843, 5, 27, 317, 6, 5510, 6, 66, 13, 175, 10549, 13, 6985, 369, 323, 12, 1101, 2843, 11, 1231, 2843, 318, 6279, 79, 214, 149, 12, 3640, 159, 15, 11, 169, 273, 11133, 3762, 5, 555, 13, 8, 31221, 24, 62, 557, 2862, 19, 5002, 318, 6279, 540, 65, 118, 1869, 30, 3, 9, 1090, 194, 13, 338, 8, 5334, 6, 68, 34, 65, 59, 118, 14434, 168, 5, 264, 6, 27, 317, 882, 3, 9, 418, 13, 34, 19, 12, 103, 28, 8165, 2843, 1098, 5, 299, 273, 33, 128, 13, 8, 806, 31221, 12, 103, 28, 5002, 5, 15275, 3899, 5422, 10, 1521, 132, 136, 4264, 57, 1719, 42, 686, 13, 496, 16, 24, 58, 1212, 9203, 52, 11768, 6347, 10, 27, 278, 31, 17, 317, 132, 31, 7, 136, 4264, 24, 62, 31, 162, 4313, 16, 1353, 13, 1719, 5, 19542, 11147, 10, 282, 1212, 9203, 52, 243, 6, 34, 31, 7, 182, 7157, 5229, 12, 2843, 2614, 5, 15275, 3899, 5422, 10, 16036, 5, 1562, 25, 5, 363, 33, 8, 167, 1231, 2284, 13, 276, 13535, 6, 45, 39, 500, 13, 903, 58, 27, 7, 132, 424, 16, 1090, 24, 25, 317, 24, 2061, 225, 36, 3, 7388, 30, 58, 1212, 9203, 52, 11768, 6347, 10, 27, 317, 132, 31, 7, 3, 9, 418, 13, 2084, 30, 125, 11708, 7, 207, 1032, 16, 48, 616, 5, 290, 31, 7, 8, 22982, 3141, 4864, 6, 132, 31, 7, 69, 4864, 6, 132, 31, 7, 3, 9, 418, 13, 585, 318, 532, 180, 12499, 5313, 1464, 9229, 318, 232, 79, 31, 60, 8, 10549, 13, 378, 27, 2799, 2283, 5, 27, 317, 24, 72, 1388, 405, 174, 12, 36, 787, 12, 8, 573, 18, 19449, 3282, 13, 48, 161, 5, 264, 6, 2061, 103, 3, 9, 418, 13, 378, 24, 79, 33, 16, 610, 13, 318, 532, 378, 27, 2799, 2283, 10, 378, 114, 4863, 11364, 6, 1772, 996, 18, 27427, 1087, 6, 18298, 11, 206, 935, 4710, 380, 6, 6418, 14614, 318, 1748, 273, 10549, 13, 378, 5, 299, 46, 359, 3282, 13, 48, 6, 27, 317, 6, 19, 7007, 28, 8, 15257, 6, 68, 92, 28, 1362, 11, 8, 573, 5, 27, 317, 125, 62, 31, 162, 435, 19, 24, 8, 167, 1231, 2061, 318, 532, 2102, 24, 310, 103, 143, 3, 9, 600, 1750, 12, 48, 23785, 13, 481, 318, 355, 8, 2102, 24, 103, 24, 167, 3762, 5, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [15275, 3899, 5422, 5259, 24, 163, 192, 1025, 7, 13, 6980, 11, 2329, 2061, 130, 492, 1231, 169, 13, 8, 276, 13535, 298, 8, 2530, 6, 3, 9, 1025, 6, 130, 341, 59, 338, 24, 276, 13535, 3762, 5, 1212, 9203, 52, 11768, 6347, 3, 12327, 48, 962, 13, 16914, 207, 2843, 11, 5259, 4863, 11364, 6, 1772, 996, 18, 27427, 1087, 6, 18298, 11, 206, 935, 4710, 380, 6, 6418, 14614, 133, 1172, 8, 433, 6, 902, 12, 4082, 8, 15257, 5, 1]}.
***** Running training *****
  Num examples = 986
  Num Epochs = 5
  Instantaneous batch size per device = 2
  Total train batch size (w. parallel, distributed & accumulation) = 16
  Gradient Accumulation steps = 8
  Total optimization steps = 310
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 29.9614, 'rouge2': 10.1946, 'rougeL': 20.5424, 'rougeLsum': 25.6537}, 'ppl': {'perplexity': 12.9741, 'ref_perplexity': 15.3402}, 'bertscore': {'precision': 84.5351, 'recall': 85.8152, 'f1': 85.1488}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 30.4702, 'rouge2': 10.3923, 'rougeL': 21.283, 'rougeLsum': 25.6903}, 'ppl': {'perplexity': 35.5016, 'ref_perplexity': 14.2691}, 'bertscore': {'precision': 85.5063, 'recall': 85.8, 'f1': 85.6332}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 30.7784, 'rouge2': 10.8002, 'rougeL': 21.812, 'rougeLsum': 26.174}, 'ppl': {'perplexity': 22.4408, 'ref_perplexity': 13.7596}, 'bertscore': {'precision': 85.6699, 'recall': 85.8718, 'f1': 85.7522}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 31.5424, 'rouge2': 10.5551, 'rougeL': 21.674, 'rougeLsum': 26.7903}, 'ppl': {'perplexity': 9.814, 'ref_perplexity': 13.6303}, 'bertscore': {'precision': 85.7822, 'recall': 85.9611, 'f1': 85.8539}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 31.3181, 'rouge2': 10.5024, 'rougeL': 21.3182, 'rougeLsum': 26.3244}, 'ppl': {'perplexity': 17.9554, 'ref_perplexity': 13.5727}, 'bertscore': {'precision': 85.738, 'recall': 86.0025, 'f1': 85.8517}}

Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round 4
Start Training!
Sample 779 of the training set: {'input_ids': [21603, 10, 363, 130, 8, 119, 753, 13, 8, 4322, 2799, 16, 8, 3071, 13, 3621, 13, 8, 4322, 58, 3, 30345, 9199, 11296, 10, 2384, 3, 5, 2786, 3440, 10, 412, 107, 3, 6, 8957, 3, 6, 8957, 3, 5, 4329, 10, 290, 62, 281, 3, 5, 16036, 168, 27, 317, 62, 43, 3665, 3242, 3, 6, 9199, 11296, 10, 275, 258, 423, 1641, 3, 5, 4329, 10, 78, 8, 5014, 1502, 33, 3, 2, 26, 159, 89, 3920, 49, 2, 19, 3, 2, 6117, 138, 17481, 2, 19, 294, 13, 82, 1288, 68, 572, 278, 31, 17, 62, 1903, 269, 12, 8, 511, 9116, 3, 5, 23142, 24, 31, 7, 213, 3, 51, 82, 3071, 3511, 3, 5, 5068, 168, 561, 437, 27, 31, 51, 16, 1567, 13, 1119, 12, 2320, 91, 125, 62, 225, 474, 30, 48, 589, 437, 27, 43, 12, 653, 12, 1789, 34, 3, 5, 9199, 11296, 10, 283, 51, 18, 107, 635, 3, 5, 4329, 10, 2432, 3, 2, 6117, 138, 17481, 2, 27, 816, 24, 8, 1573, 27, 225, 1130, 133, 36, 7479, 5782, 45, 8611, 3, 6, 11, 3, 189, 8, 1053, 27, 131, 474, 24, 132, 114, 24, 19, 24, 3, 76, 107, 16, 8, 16, 155, 16, 8, 2332, 1726, 27, 317, 27, 225, 131, 36, 539, 12, 1995, 13, 5782, 3, 5, 148, 214, 25, 54, 497, 959, 25, 241, 150, 1052, 149, 17056, 34, 2993, 25, 214, 34, 225, 661, 39, 443, 3, 6, 34, 225, 1678, 95, 39, 2340, 3, 99, 225, 561, 919, 30, 39, 205, 834, 308, 834, 3, 2, 6117, 138, 17481, 2, 2891, 25, 241, 34, 12, 103, 3, 2, 6117, 138, 17481, 2, 9199, 11296, 10, 3, 31, 439, 9, 63, 3, 5, 4329, 10, 561, 11, 258, 38, 62, 281, 30, 125, 62, 31, 195, 43, 12, 103, 19, 1845, 11, 6312, 175, 5782, 1315, 12, 561, 408, 11, 1487, 28297, 3, 5, 264, 27, 31, 195, 36, 1107, 12, 25, 561, 4344, 38, 8, 9199, 8865, 12, 817, 140, 149, 614, 34, 31, 7, 3, 13366, 36, 12, 617, 3, 9, 1451, 42, 149, 2881, 34, 31, 7, 3, 13366, 36, 42, 3, 99, 39, 97, 3, 6, 3, 99, 34, 1217, 874, 203, 12, 1344, 48, 34, 31, 7, 131, 424, 62, 54, 31, 17, 103, 3, 5, 9199, 11296, 10, 283, 51, 18, 107, 635, 3, 5, 11475, 3, 5, 11475, 3, 5, 11475, 3, 5, 454, 635, 3, 107, 635, 3, 5, 283, 51, 3, 5, 4329, 10, 264, 16, 8, 1849, 131, 43, 3, 9, 600, 3, 102, 25076, 13, 378, 24, 62, 3, 2, 26, 159, 89, 3920, 49, 2, 13112, 54, 3, 189, 3793, 959, 16, 9199, 11296, 10, 11475, 3, 5, 4329, 10, 11, 258, 131, 3, 8578, 378, 91, 24, 54, 31, 17, 36, 612, 21, 80, 1053, 42, 430, 3, 6, 11, 258, 8, 378, 24, 1727, 8, 167, 5250, 24, 12, 3, 76, 107, 12, 3, 9, 884, 62, 31, 195, 653, 12, 258, 1884, 155, 159, 15, 273, 3, 5, 9199, 11296, 10, 283, 51, 18, 107, 635, 3, 5, 11475, 3, 5, 4329, 10, 264, 24, 47, 561, 125, 27, 3679, 132, 3, 6, 11, 38, 27, 243, 30, 8, 9116, 132, 9157, 8, 9199, 11597, 81, 24, 11, 8, 119, 589, 19, 9398, 19, 310, 3, 13366, 36, 38, 359, 38, 540, 3, 6, 250, 3, 99, 62, 31, 60, 3, 13366, 1789, 48, 589, 3, 6, 27, 317, 8, 200, 97, 12, 1789, 34, 19, 38, 3, 9, 1619, 915, 3, 5, 23277, 874, 2430, 7, 656, 3, 9, 1245, 385, 915, 3, 6, 11, 62, 241, 34, 12, 36, 46, 24785, 1242, 3, 6, 9199, 11296, 10, 283, 51, 3, 5, 4329, 10, 62, 241, 10843, 12, 217, 34, 11, 317, 34, 31, 7, 3, 6, 873, 15, 27, 131, 3, 26761, 43, 24, 3, 5, 275, 240, 91, 70, 11725, 11, 805, 34, 3, 5, 264, 34, 31, 7, 3, 26761, 36, 310, 5250, 11, 34, 3, 2, 26, 159, 89, 3920, 49, 2, 68, 34, 31, 7, 3, 26761, 281, 12, 512, 57, 1600, 3, 6, 3, 31, 658, 1074, 959, 24, 25, 278, 31, 17, 641, 43, 91, 132, 16, 1600, 2924, 34, 300, 3, 6, 19, 29, 31, 17, 3, 13366, 1789, 21, 1619, 3, 5, 9199, 11296, 10, 11475, 3, 5, 4329, 10, 2432, 3, 2, 6117, 138, 17481, 2, 11, 258, 27, 31, 195, 36, 1107, 12, 25, 38, 8, 6674, 25064, 568, 12, 653, 12, 817, 140, 45, 39, 500, 13, 903, 125, 33, 8, 167, 2609, 753, 24, 62, 228, 474, 30, 34, 11, 653, 12, 1884, 199, 140, 28, 24, 1884, 155, 4890, 13, 3, 76, 107, 13, 8, 753, 11, 13, 8, 8, 320, 11, 8, 3243, 6674, 25064, 10, 16036, 3, 5, 4329, 10, 11, 27, 31, 195, 36, 1107, 223, 12, 25, 12, 199, 3, 8578, 91, 273, 5782, 45, 24, 500, 13, 903, 3, 5, 6674, 25064, 10, 16036, 3, 5, 4329, 10, 264, 27, 31, 195, 36, 1107, 12, 25, 21, 149, 231, 19, 34, 3, 13366, 583, 178, 11, 149, 307, 19, 34, 3, 13366, 240, 25, 3, 6, 9199, 11296, 10, 283, 51, 3, 635, 18, 107, 635, 3, 5, 4329, 10, 11, 27, 31, 195, 36, 1107, 12, 25, 12, 817, 140, 125, 31, 7, 3, 13366, 143, 10843, 240, 91, 70, 11725, 25, 214, 3, 6, 6674, 25064, 10, 363, 753, 3, 5, 4329, 10, 125, 125, 31, 7, 125, 31, 7, 3, 13366, 310, 36, 125, 79, 580, 3, 9, 108, 15133, 3, 6, 6674, 25064, 10, 180, 1789, 179, 3, 5, 2163, 3, 2, 6117, 138, 17481, 2, 3, 5, 4329, 10, 3, 31, 658, 1074, 62, 3, 26761, 1789, 48, 108, 15133, 3, 2, 6117, 138, 17481, 2, 3, 5, 9199, 11296, 10, 3, 2, 6117, 138, 17481, 2, 4329, 10, 71, 418, 13, 648, 8, 589, 24, 930, 8, 200, 45, 46, 3867, 500, 13, 903, 19, 29, 31, 17, 8, 589, 24, 10843, 31, 7, 310, 131, 3, 13366, 240, 91, 70, 11725, 11, 805, 21, 1619, 21, 21, 70, 861, 42, 21, 70, 2553, 42, 2891, 3, 5, 6674, 25064, 10, 2163, 3, 5, 4329, 10, 16036, 54, 62, 281, 12, 8, 416, 9116, 754, 3, 58, 901, 3535, 27, 27, 641, 410, 3, 9, 385, 720, 13, 585, 227, 69, 166, 1338, 213, 62, 3, 17, 13296, 91, 128, 912, 11, 34, 1416, 12, 140, 24, 441, 8, 1487, 24, 62, 31, 60, 479, 44, 8, 3, 76, 107, 8, 829, 629, 800, 310, 19, 29, 31, 17, 3, 13366, 36, 487, 3, 5, 264, 27, 31, 26, 114, 39, 5782, 12, 369, 223, 12, 8, 119, 9116, 213, 27, 47, 2145, 62, 62, 228, 3130, 959, 3, 5, 9199, 11296, 10, 264, 27, 27, 131, 133, 114, 12, 3, 76, 107, 617, 128, 996, 753, 12, 8, 4322, 8612, 561, 27, 317, 175, 33, 8, 182, 650, 753, 11, 3, 76, 107, 79, 278, 31, 17, 240, 231, 3, 76, 107, 3, 76, 107, 231, 13, 8, 561, 561, 1729, 92, 3, 6, 4329, 10, 283, 51, 18, 107, 635, 3, 5, 9199, 11296, 10, 34, 31, 7, 114, 3, 15, 40, 8, 1499, 42, 10634, 84, 3, 76, 107, 84, 33, 132, 30, 8, 3, 76, 107, 4322, 8612, 79, 3, 2, 26, 159, 89, 3920, 49, 2, 273, 62, 54, 143, 3, 76, 107, 561, 114, 27468, 3, 76, 107, 79, 31, 195, 36, 114, 659, 15685, 1222, 3, 99, 34, 19, 2164, 78, 24, 25, 54, 253, 39, 4322, 8612, 3, 99, 34, 19, 2164, 3, 5, 4329, 10, 283, 51, 18, 107, 635, 3, 5, 9199, 11296, 10, 275, 8, 52, 132, 225, 36, 3, 9, 36, 15, 102, 3, 99, 186, 10634, 33, 3, 8918, 3, 99, 11605, 3, 9, 861, 19, 1556, 28, 8, 4322, 8612, 11, 3, 9, 11, 255, 255, 42, 3, 88, 19, 13840, 8, 10634, 66, 44, 8, 97, 258, 132, 225, 36, 3, 9, 36, 15, 102, 2145, 24, 34, 31, 7, 3, 2, 26, 159, 89, 3920, 49, 2, 48, 48, 19, 59, 3, 9, 3, 9, 25, 214, 3, 9, 3, 9, 1041, 3, 6, 132, 54, 36, 150, 1041, 838, 12, 24, 78, 3, 5, 275, 132, 225, 36, 3, 9, 861, 6081, 3, 6, 114, 3, 76, 107, 3, 76, 107, 25, 225, 36, 3, 179, 12, 6081, 39, 4322, 8612, 78, 24, 3, 76, 107, 561, 2891, 10634, 33, 3, 8918, 57, 3, 9, 861, 79, 54, 31, 17, 36, 114, 3, 63, 25, 3, 23, 25, 3, 99, 25, 43, 3, 2168, 1082, 11, 66, 258, 79, 31, 195, 36, 4752, 1556, 28, 8, 4322, 8612, 7, 78, 54, 6081, 8, 4322, 8612, 3, 5, 156, 143, 34, 169, 179, 21, 72, 145, 80, 1407, 34, 31, 7, 3, 9, 34, 31, 7, 614, 68, 27, 317, 34, 31, 7, 487, 2786, 3440, 10, 11475, 168, 3, 2, 26, 159, 89, 3920, 49, 2, 17945, 168, 24, 65, 118, 3, 15, 24, 65, 118, 17809, 3, 6, 78, 24, 31, 7, 24, 31, 7, 12050, 3, 9, 2288, 32, 17, 500, 230, 3, 5, 283, 51, 18, 107, 635, 3, 5, 9199, 11296, 10, 68, 34, 3, 76, 107, 4329, 10, 1548, 62, 641, 17809, 24, 3, 5, 9199, 11296, 10, 17945, 17945, 17945, 6674, 25064, 10, 7495, 1109, 920, 3, 5, 9199, 11296, 10, 78, 34, 31, 7, 34, 31, 7, 8957, 3, 6, 17945, 3, 6, 17945, 3, 5, 275, 3, 76, 107, 315, 8803, 24, 62, 54, 103, 114, 3, 76, 107, 62, 54, 43, 25, 214, 3, 9, 66, 3127, 8803, 42, 25, 214, 1965, 3, 76, 107, 3, 12124, 84, 54, 1400, 139, 39, 1780, 9199, 11296, 10, 275, 3, 76, 107, 1831, 6702, 3, 23, 3, 99, 25, 241, 72, 753, 258, 62, 54, 1831, 3, 9, 6702, 34, 27, 27, 278, 31, 17, 317, 34, 56, 240, 136, 540, 996, 540, 250, 6161, 62, 43, 46, 4580, 4558, 27, 317, 62, 54, 131, 1728, 1400, 24, 1451, 139, 8, 4558, 78, 34, 31, 7, 3, 2, 26, 159, 89, 3920, 49, 2, 4329, 10, 11475, 3, 6, 24, 31, 7, 24, 31, 7, 3, 9, 207, 3, 2, 26, 159, 89, 3920, 49, 2, 24, 31, 7, 3, 9, 207, 80, 3, 6, 2786, 3440, 10, 283, 51, 18, 107, 635, 3, 6, 3, 635, 18, 107, 635, 3, 5, 6674, 25064, 10, 283, 51, 17945, 3, 5, 9199, 11296, 10, 11475, 3, 6, 11, 62, 1831, 3, 9, 6702, 3, 5, 4329, 10, 250, 8, 6702, 133, 36, 310, 2609, 3, 6, 2786, 3440, 10, 2163, 3, 5, 4329, 10, 11, 11, 116, 19, 39, 3960, 504, 1107, 30, 9199, 11296, 10, 11475, 3, 5, 2786, 3440, 10, 2163, 3, 5, 9199, 11296, 10, 11475, 3, 6, 11, 258, 25, 54, 131, 217, 39, 4322, 8612, 17945, 17945, 17945, 78, 3, 2, 26, 159, 89, 3920, 49, 2, 2786, 3440, 10, 11475, 25, 31, 60, 3823, 132, 641, 42, 2087, 25, 43, 150, 119, 3, 76, 107, 3, 2, 26, 159, 89, 3920, 49, 2, 6674, 25064, 10, 2163, 3, 2, 122, 9, 102, 2, 3, 5, 4329, 10, 3, 2, 6117, 138, 17481, 2, 11, 3, 2, 6117, 138, 17481, 2, 3, 2, 26, 159, 89, 3920, 49, 2, 11475, 3, 6, 11, 3, 9, 418, 13, 97, 132, 31, 7, 59, 3, 9, 6702, 30, 8, 1641, 3, 6, 11, 25, 43, 12, 281, 5775, 68, 25, 131, 14371, 9, 320, 44, 8, 1506, 21, 3, 9, 1962, 3, 5, 9199, 11296, 10, 11475, 3, 5, 4329, 10, 11475, 24, 31, 7, 24, 31, 7, 207, 3, 6, 8, 6702, 19, 207, 3, 5, 2786, 3440, 10, 3, 2, 6117, 138, 17481, 2, 283, 51, 18, 107, 635, 3, 5, 6674, 25064, 10, 275, 34, 225, 43, 46, 3, 76, 107, 34, 54, 43, 46, 6196, 6702, 3, 9, 3, 9, 568, 3, 99, 128, 3, 99, 10843, 2746, 12, 129, 95, 44, 300, 2641, 2641, 276, 834, 329, 834, 258, 3, 88, 54, 356, 8, 97, 11, 34, 54, 36, 261, 38, 46, 6196, 6702, 3, 6, 1], 'attention_masklabels': [37, 10634, 30, 8, 4322, 6, 3029, 28, 16, 89, 11096, 26, 18851, 6, 133, 36, 27468, 5604, 8, 1424, 19, 30, 6, 78, 1105, 54, 253, 8, 4322, 237, 16, 8, 2164, 5, 1203, 6, 8, 10634, 54, 16507, 10302, 1315, 12, 315, 3621, 5, 37, 4322, 56, 36, 15, 102, 3, 99, 396, 186, 10634, 33, 3, 8918, 44, 728, 5, 37, 372, 4686, 12, 617, 3, 9, 1831, 6702, 6, 84, 54, 92, 36, 261, 38, 46, 6196, 6702, 5, 37, 800, 13, 578, 3, 1931, 6327, 11, 14498, 3031, 494, 13, 8, 829, 629, 47, 12967, 5, 1]}.
***** Running training *****
  Num examples = 986
  Num Epochs = 5
  Instantaneous batch size per device = 2
  Total train batch size (w. parallel, distributed & accumulation) = 16
  Gradient Accumulation steps = 8
  Total optimization steps = 310
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 26.9222, 'rouge2': 7.1763, 'rougeL': 17.5742, 'rougeLsum': 23.2212}, 'ppl': {'perplexity': 169.8406, 'ref_perplexity': 18.9133}, 'bertscore': {'precision': 83.3499, 'recall': 85.235, 'f1': 84.269}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 28.0828, 'rouge2': 7.6341, 'rougeL': 19.1329, 'rougeLsum': 24.3597}, 'ppl': {'perplexity': 84.3223, 'ref_perplexity': 17.536}, 'bertscore': {'precision': 84.2579, 'recall': 85.3403, 'f1': 84.7794}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 28.224, 'rouge2': 7.7925, 'rougeL': 19.7109, 'rougeLsum': 24.2911}, 'ppl': {'perplexity': 118.162, 'ref_perplexity': 17.0968}, 'bertscore': {'precision': 84.7371, 'recall': 85.3494, 'f1': 85.0255}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 28.4914, 'rouge2': 7.7646, 'rougeL': 19.8688, 'rougeLsum': 24.7501}, 'ppl': {'perplexity': 102.2721, 'ref_perplexity': 16.774}, 'bertscore': {'precision': 85.0697, 'recall': 85.3354, 'f1': 85.1861}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 28.8874, 'rouge2': 8.0597, 'rougeL': 20.1023, 'rougeLsum': 24.9234}, 'ppl': {'perplexity': 90.0609, 'ref_perplexity': 16.732}, 'bertscore': {'precision': 85.0955, 'recall': 85.4219, 'f1': 85.2418}}

Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round 5
Start Training!
Sample 460 of the training set: {'input_ids': [21603, 10, 363, 47, 243, 81, 13218, 1976, 58, 3, 30345, 10360, 272, 10, 1839, 172, 16, 192, 3, 18, 1088, 9029, 3, 6, 114, 13218, 1976, 3, 6, 132, 3, 31, 7, 46, 16242, 418, 396, 3, 99, 25, 131, 320, 44, 223, 19778, 7, 3, 6, 3, 99, 25, 1099, 273, 21655, 7, 3, 58, 34, 3, 31, 7, 92, 548, 34, 3, 31, 7, 1450, 3, 5, 94, 3, 31, 7, 131, 24, 151, 43, 29, 31, 17, 118, 3, 2, 9033, 2, 479, 44, 24, 250, 79, 3, 31, 162, 118, 692, 712, 3, 18, 4245, 3026, 21, 3, 2, 9033, 2, 5023, 5786, 3, 5, 10771, 454, 10, 283, 51, 3, 18, 3, 107, 635, 3, 5, 5589, 309, 10, 283, 51, 3, 18, 3, 107, 635, 3, 58, 10360, 272, 10, 264, 3, 6, 8, 822, 19, 3, 6, 25, 214, 3, 6, 149, 186, 72, 21655, 7, 3, 2, 9033, 2, 3, 2, 6117, 138, 17481, 2, 103, 25, 43, 3, 2, 9033, 2, 13, 3, 6, 497, 8, 192, 3, 18, 568, 686, 3, 6, 57, 2651, 72, 151, 3, 5, 12, 3, 9, 1338, 3, 6, 11, 34, 164, 36, 3, 9, 418, 72, 68, 3, 23, 34, 164, 3, 2, 26, 159, 89, 3920, 49, 2, 3, 2, 9033, 2, 34, 164, 59, 36, 3, 5, 5589, 309, 10, 1548, 3, 6, 68, 217, 3, 6, 27, 253, 34, 1477, 237, 3, 99, 34, 2088, 31, 17, 136, 72, 3, 6, 10360, 272, 10, 264, 3, 5, 5589, 309, 10, 250, 3, 2, 9033, 2, 437, 62, 130, 4945, 28, 48, 423, 146, 9247, 1843, 13, 589, 16, 13218, 1976, 213, 34, 47, 131, 66, 12494, 91, 3, 2, 6117, 138, 17481, 2, 62, 131, 3, 2, 26, 159, 89, 3920, 49, 2, 762, 47, 131, 1245, 3, 6, 10360, 272, 10, 283, 51, 3, 18, 3, 107, 635, 3, 58, 5589, 309, 10, 78, 24, 3, 2, 26, 159, 89, 3920, 49, 2, 78, 8, 962, 19, 16, 3, 2, 26, 159, 89, 3920, 49, 2, 16, 3, 9, 1419, 3, 2, 9033, 2, 213, 3, 189, 24, 3, 31, 7, 3, 2, 26, 159, 89, 3920, 49, 2, 10360, 272, 10, 1548, 3, 6, 34, 3, 31, 7, 59, 310, 3, 2, 9033, 2, 96, 1245, 96, 3, 5, 94, 5619, 125, 25, 3, 31, 60, 692, 3, 5, 264, 3, 99, 25, 130, 700, 3, 2, 9033, 2, 3, 2, 6117, 138, 17481, 2, 578, 3, 6, 3, 76, 107, 3, 2, 26, 159, 89, 3920, 49, 2, 5619, 125, 25, 3, 31, 60, 692, 3, 6, 3, 99, 3, 2, 26, 159, 89, 3920, 49, 2, 5068, 230, 62, 3, 31, 60, 103, 62, 43, 928, 1337, 7735, 30, 8, 151, 16, 48, 1338, 3, 5, 264, 8, 822, 19, 3, 6, 25, 214, 3, 2, 26, 159, 89, 3920, 49, 2, 96, 33, 132, 310, 72, 21655, 7, 4626, 145, 132, 133, 36, 16, 3, 9, 192, 3, 18, 568, 3, 2, 9033, 2, 1088, 96, 3, 5, 5589, 309, 10, 283, 51, 3, 18, 3, 107, 635, 3, 58, 10360, 272, 10, 275, 3, 2, 26, 159, 89, 3920, 49, 2, 11, 132, 168, 164, 36, 3, 6, 68, 3, 2, 26, 159, 89, 3920, 49, 2, 5589, 309, 10, 1563, 3, 2, 26, 159, 89, 3920, 49, 2, 752, 3, 51, 752, 140, 3, 60, 27111, 125, 27, 3, 31, 51, 2145, 123, 172, 27, 278, 31, 17, 317, 27, 3, 31, 51, 652, 34, 640, 3, 5, 363, 3, 2, 26, 159, 89, 3920, 49, 2, 125, 27, 3, 2, 26, 159, 89, 3920, 49, 2, 125, 3, 2, 26, 159, 89, 3920, 49, 2, 27, 6994, 31, 17, 169, 1234, 114, 96, 1245, 96, 250, 2087, 24, 3, 31, 7, 396, 3, 2, 26, 159, 89, 3920, 49, 2, 3, 23, 396, 4840, 7886, 7, 15, 3, 5, 299, 125, 27, 1243, 19, 3, 2, 6117, 138, 17481, 2, 24, 3, 6, 561, 16, 13218, 1976, 3, 6, 3, 2, 9033, 2, 3, 3565, 8, 186, 3, 2, 26, 159, 89, 3920, 49, 2, 186, 119, 982, 24, 62, 43, 3, 6, 80, 682, 24, 62, 3, 31, 60, 59, 4014, 19, 21655, 3, 5, 275, 125, 62, 3, 31, 60, 692, 230, 19, 3, 6, 3, 2, 9033, 2, 5915, 45, 8, 186, 119, 5859, 16, 8, 2491, 3, 6, 62, 33, 4014, 21655, 11, 80, 13, 8, 2081, 24, 62, 3, 31, 60, 4014, 34, 3, 6, 3, 2, 9033, 2, 25, 214, 3, 6, 80, 13, 135, 59, 66, 13, 135, 3, 6, 80, 13, 135, 19, 3, 2, 6117, 138, 17481, 2, 24, 3, 210, 3, 76, 107, 44, 709, 3, 6, 3, 2, 9033, 2, 25, 214, 27, 3, 31, 51, 182, 1638, 16, 3, 2, 6117, 138, 17481, 2, 8, 8616, 16, 84, 3, 6, 3, 76, 107, 3, 2, 9033, 2, 321, 151, 2508, 33, 1134, 231, 7509, 3, 2, 9033, 2, 185, 26, 2317, 3, 6, 3, 2, 6117, 138, 17481, 2, 11, 45, 3, 9, 712, 18701, 3, 5, 275, 78, 3, 6, 3, 2, 9033, 2, 16, 24, 495, 3, 6, 34, 405, 129, 4838, 16, 3, 6, 3, 2, 6117, 138, 17481, 2, 11, 34, 3, 31, 7, 1134, 614, 12, 3, 2047, 7, 3, 2, 9033, 2, 12, 131, 9751, 34, 3, 6, 12, 131, 103, 3026, 30, 80, 11, 59, 30, 8, 119, 3, 5, 10360, 272, 10, 27, 3, 2, 26, 159, 89, 3920, 49, 2, 27, 2065, 24, 34, 3, 31, 7, 46, 962, 270, 3, 2, 9033, 2, 68, 34, 3, 31, 7, 92, 46, 962, 21, 13218, 1976, 11, 3, 99, 25, 3, 2, 9033, 2, 317, 13, 4677, 3, 2, 9033, 2, 271, 4381, 147, 8, 6596, 3, 6, 84, 27, 317, 3, 6, 25, 214, 3, 6, 48, 829, 500, 13, 6908, 4677, 19, 29, 31, 17, 131, 12, 43, 151, 16, 3, 9, 562, 68, 12, 92, 43, 3, 2, 9033, 2, 4677, 147, 315, 951, 2356, 3, 5, 5589, 309, 10, 283, 51, 3, 18, 3, 107, 635, 3, 5, 10360, 272, 10, 3836, 623, 1057, 3, 20068, 15, 151, 3290, 31, 17, 36, 1638, 16, 24, 68, 66, 8, 7478, 807, 341, 1581, 3, 6, 5589, 309, 10, 283, 51, 3, 18, 3, 107, 635, 3, 5, 10360, 272, 10, 78, 3, 99, 284, 13, 178, 47, 3874, 11, 578, 3, 2, 9033, 2, 3, 2, 6117, 138, 17481, 2, 3, 9, 1338, 24, 194, 3, 2, 9033, 2, 25, 3, 157, 29, 25, 214, 114, 3, 9, 2542, 580, 3, 5, 275, 3, 6, 131, 8, 822, 19, 3, 6, 3, 2, 9033, 2, 3, 63, 25, 214, 3, 6, 16, 13218, 1976, 3, 2, 9033, 2, 25, 133, 317, 24, 3, 31, 7, 8, 3, 21120, 495, 13, 3, 9, 1338, 13, 72, 145, 80, 568, 3, 6, 5589, 309, 10, 283, 51, 3, 18, 3, 107, 635, 3, 5, 10360, 272, 10, 11, 3, 2, 9033, 2, 3, 2, 6117, 138, 17481, 2, 27, 3, 31, 51, 7918, 149, 231, 72, 3, 2, 9033, 2, 21655, 3, 2, 9033, 2, 13, 3, 2, 9033, 2, 8, 1308, 24, 3, 2, 26, 159, 89, 3920, 49, 2, 24, 8158, 3028, 1837, 28, 72, 151, 915, 3, 5, 264, 34, 164, 36, 24, 578, 386, 151, 3, 2, 9033, 2, 3, 2, 6117, 138, 17481, 2, 19, 182, 315, 45, 578, 192, 151, 42, 34, 164, 59, 36, 3, 5, 5589, 309, 10, 466, 3, 31, 7, 46, 359, 822, 12, 987, 3, 5, 10360, 272, 10, 264, 3, 5, 5589, 309, 10, 27, 317, 125, 27, 3, 31, 51, 3, 2, 26, 159, 89, 3920, 49, 2, 3, 2, 9033, 2, 432, 27, 3, 31, 51, 3, 7, 310, 2145, 19, 24, 27, 278, 31, 17, 317, 62, 130, 4014, 24, 16, 13218, 1976, 3, 5, 10360, 272, 10, 933, 25, 3, 6, 140, 3, 5, 299, 3, 76, 107, 3, 2, 26, 159, 89, 3920, 49, 2, 68, 3, 2, 26, 159, 89, 3920, 49, 2, 68, 5589, 309, 10, 101, 60, 25, 3, 58, 10771, 454, 10, 4229, 34, 2088, 31, 17, 3, 2, 9033, 2, 16, 8, 408, 3, 5, 5589, 309, 10, 101, 60, 25, 3, 2, 26, 159, 89, 3920, 49, 2, 130, 25, 3, 2, 26, 159, 89, 3920, 49, 2, 130, 25, 3, 2, 26, 159, 89, 3920, 49, 2, 130, 25, 11297, 34, 3, 58, 27, 1243, 3, 6, 3, 210, 3, 210, 130, 3, 2, 26, 159, 89, 3920, 49, 2, 10360, 272, 10, 290, 3, 2, 26, 159, 89, 3920, 49, 2, 132, 3, 31, 7, 700, 12, 817, 25, 8, 2827, 3, 6, 8, 1053, 572, 34, 3, 31, 7, 614, 12, 3613, 19, 250, 13, 78, 3, 6, 45, 8, 500, 13, 903, 13, 6908, 7478, 3, 6, 27, 1243, 3, 6, 84, 3, 2, 9033, 2, 2744, 15598, 9, 89, 5352, 11, 11813, 7, 11, 27, 141, 128, 1195, 30, 3, 6, 25, 241, 12, 214, 8, 5932, 13, 5050, 3, 5, 5589, 309, 10, 11475, 3, 5, 10360, 272, 10, 264, 125, 2906, 19, 3, 99, 25, 3, 31, 60, 2508, 11, 27, 43, 3, 9, 223, 19778, 16, 8, 2214, 13, 39, 919, 3, 6, 11, 258, 25, 453, 352, 125, 34, 1416, 114, 16, 3, 9, 7478, 825, 19, 39, 919, 11, 258, 82, 223, 19778, 3, 6, 5589, 309, 10, 11475, 3, 5, 10360, 272, 10, 237, 713, 82, 223, 19778, 6935, 1551, 1096, 39, 919, 3, 5, 5589, 309, 10, 11475, 3, 58, 10360, 272, 10, 264, 3, 6, 21, 378, 114, 1612, 15309, 42, 7478, 15309, 3, 2, 9033, 2, 3, 2, 6117, 138, 17481, 2, 34, 3, 31, 7, 3, 2, 26, 159, 89, 3920, 49, 2, 101, 214, 24, 24, 3, 31, 7, 1786, 16, 490, 97, 3, 5, 5589, 309, 10, 11475, 3, 58, 10360, 272, 10, 299, 3, 6, 250, 13, 8, 3, 9, 3422, 7, 1225, 5508, 1628, 24, 130, 612, 11, 8, 685, 24, 128, 13, 8, 3, 9, 3422, 7, 1225, 331, 16, 13218, 1976, 130, 3586, 3, 6, 151, 2654, 31, 17, 810, 34, 3, 6, 68, 24, 744, 31, 17, 1243, 16, 8, 490, 296, 24, 151, 278, 31, 17, 1350, 24, 194, 3, 5, 264, 3, 6, 34, 3, 31, 7, 3, 2, 26, 159, 89, 3920, 49, 2, 561, 5589, 309, 10, 11475, 3, 6, 27, 2088, 31, 17, 2145, 24, 3, 5, 5068, 3, 58, 27, 47, 131, 2145, 24, 3, 210, 230, 62, 3, 31, 60, 479, 44, 34, 3, 5, 10360, 272, 10, 1548, 3, 6, 62, 3, 31, 162, 501, 5589, 309, 10, 275, 3, 2, 26, 159, 89, 3920, 49, 2, 11, 3, 2, 26, 159, 89, 3920, 49, 2, 11, 3, 6, 25, 3, 2, 26, 159, 89, 3920, 49, 2, 25, 2087, 1114, 12, 320, 44, 34, 274, 68, 3, 6, 21, 175, 796, 2268, 2081, 16, 1353, 13, 149, 8, 331, 47, 25, 9355, 31, 17, 3, 5, 10360, 272, 10, 5068, 3, 5, 101, 3, 31, 60, 479, 44, 34, 270, 3, 5, 5589, 309, 10, 264, 24, 3, 31, 7, 572, 34, 3, 31, 7, 1107, 12, 178, 38, 126, 237, 713, 34, 164, 168, 36, 3, 2, 9033, 2, 25, 214, 3, 6, 3, 99, 39, 3, 2, 26, 159, 89, 3920, 49, 2, 3, 99, 39, 10950, 532, 7, 37, 22455, 25, 130, 1772, 3, 2, 6117, 138, 17481, 2, 3, 15, 107, 3, 2, 26, 159, 89, 3920, 49, 2, 10360, 272, 10, 2432, 3, 5, 5589, 309, 10, 5068, 3, 58, 3, 2, 26, 159, 89, 3920, 49, 2, 3, 99, 34, 3, 31, 7, 8, 206, 195, 815, 107, 3, 2, 287, 297, 2, 22455, 3, 6, 11, 3, 99, 700, 25, 43, 38, 231, 21655, 16, 3, 9, 192, 3, 18, 568, 3, 6, 3, 2, 6117, 138, 17481, 2, 62, 278, 31, 17, 214, 8, 1525, 12, 24, 3, 5, 37, 1053, 62, 278, 31, 17, 214, 8, 1525, 12, 19, 123, 172, 34, 2088, 31, 17, 7463, 11, 34, 2088, 31, 17, 7463, 250, 34, 2088, 1], 'attention_masklabels': [5589, 309, 243, 13218, 1976, 405, 59, 995, 21, 4034, 5592, 13, 223, 19778, 7, 6, 902, 28, 3, 9, 2755, 2417, 5, 3195, 19778, 7, 3, 6, 84, 33, 8, 4248, 2942, 13, 21655, 7, 16, 13218, 1976, 278, 31, 17, 577, 38, 600, 3, 9, 1075, 367, 6, 250, 34, 3, 31, 7, 73, 14884, 12, 223, 19778, 28, 3, 9, 1249, 18, 568, 2417, 5, 1]}.
***** Running training *****
  Num examples = 986
  Num Epochs = 5
  Instantaneous batch size per device = 2
  Total train batch size (w. parallel, distributed & accumulation) = 16
  Gradient Accumulation steps = 8
  Total optimization steps = 310
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 29.8242, 'rouge2': 10.5838, 'rougeL': 20.5828, 'rougeLsum': 26.2708}, 'ppl': {'perplexity': 192.2827, 'ref_perplexity': 14.9576}, 'bertscore': {'precision': 84.5085, 'recall': 85.3574, 'f1': 84.9085}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 29.9136, 'rouge2': 10.8292, 'rougeL': 20.9361, 'rougeLsum': 26.46}, 'ppl': {'perplexity': 77.0044, 'ref_perplexity': 13.6844}, 'bertscore': {'precision': 85.7422, 'recall': 85.468, 'f1': 85.5848}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 30.9842, 'rouge2': 11.6313, 'rougeL': 22.0597, 'rougeLsum': 27.6136}, 'ppl': {'perplexity': 67.3493, 'ref_perplexity': 13.1996}, 'bertscore': {'precision': 85.6377, 'recall': 85.5434, 'f1': 85.5702}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 30.2004, 'rouge2': 11.2233, 'rougeL': 22.0344, 'rougeLsum': 27.2264}, 'ppl': {'perplexity': 67.0062, 'ref_perplexity': 12.9218}, 'bertscore': {'precision': 85.9349, 'recall': 85.4264, 'f1': 85.6614}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 30.6738, 'rouge2': 11.7571, 'rougeL': 22.3116, 'rougeLsum': 27.6362}, 'ppl': {'perplexity': 61.4163, 'ref_perplexity': 12.8589}, 'bertscore': {'precision': 86.0648, 'recall': 85.6002, 'f1': 85.8134}}

Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round 6
Start Training!
Sample 483 of the training set: {'input_ids': [21603, 10, 363, 130, 8, 3379, 5172, 383, 8, 3831, 13, 8, 3876, 408, 24, 130, 831, 21, 8, 1449, 13, 8, 4322, 610, 58, 3, 30345, 9199, 11296, 10, 27, 43, 131, 4456, 3, 2, 6117, 138, 17481, 2, 3, 76, 107, 323, 360, 3, 76, 107, 3379, 84, 62, 1457, 21, 8, 4322, 610, 3, 76, 107, 1449, 3, 5, 4329, 10, 3, 2, 6117, 138, 17481, 2, 9199, 11296, 10, 412, 107, 8, 166, 80, 19, 495, 12, 453, 66, 8, 3379, 114, 4580, 4558, 3, 6, 3322, 3, 6, 672, 15, 449, 9, 3, 6, 672, 15, 449, 9, 3, 6, 34, 31, 7, 114, 3, 2, 26, 159, 89, 3920, 49, 2, 412, 107, 34, 54, 36, 3, 9, 2343, 80, 3, 6, 614, 2343, 3, 6, 78, 24, 34, 54, 36, 1101, 3, 6, 237, 3, 99, 25, 131, 3, 76, 107, 3, 76, 107, 3, 6, 3, 2, 6117, 138, 17481, 2, 25, 214, 3, 6, 3, 99, 25, 3, 2, 6117, 138, 17481, 2, 3, 2, 26, 159, 89, 3920, 49, 2, 3, 99, 34, 7250, 323, 3, 6, 258, 34, 744, 31, 17, 3, 2, 6117, 138, 17481, 2, 1733, 3, 5, 264, 34, 225, 36, 1101, 3, 5, 2786, 3440, 10, 283, 51, 18, 107, 635, 3, 5, 9199, 11296, 10, 275, 3, 76, 107, 3, 76, 107, 132, 33, 150, 10947, 1397, 261, 16, 24, 3, 5, 275, 34, 225, 36, 29386, 3, 5, 2786, 3440, 10, 283, 51, 18, 107, 635, 3, 5, 9199, 11296, 10, 412, 107, 11, 3, 76, 107, 3, 2, 6117, 138, 17481, 2, 3, 6, 4329, 10, 283, 51, 18, 107, 635, 3, 5, 1804, 500, 3, 5, 9199, 11296, 10, 17945, 3, 6, 11, 92, 3, 76, 107, 338, 13, 3243, 53, 2890, 106, 3379, 114, 3, 76, 107, 3, 99, 62, 241, 12, 43, 315, 6548, 3, 6, 1692, 3, 6, 1131, 3, 6, 1442, 3, 6, 78, 3, 76, 107, 3, 76, 107, 62, 43, 12, 169, 3, 76, 107, 128, 3243, 53, 2890, 782, 2890, 782, 3379, 3, 5, 275, 3, 76, 107, 8, 511, 359, 589, 19, 3, 76, 107, 3, 76, 107, 3, 76, 107, 4580, 4558, 3, 5, 4329, 10, 3, 2, 6117, 138, 17481, 2, 9199, 11296, 10, 412, 107, 84, 3, 76, 107, 62, 54, 169, 3, 9, 1385, 8732, 80, 250, 34, 31, 7, 114, 8, 34, 31, 7, 114, 8, 842, 13, 8, 4322, 8612, 3, 5, 156, 34, 19, 59, 2918, 258, 762, 11064, 19, 352, 12, 36, 3, 76, 107, 114, 561, 8, 90, 89, 3, 15, 7, 7, 705, 2918, 78, 34, 3, 2, 26, 159, 89, 3920, 49, 2, 25, 225, 3, 2, 26, 159, 89, 3920, 49, 2, 62, 225, 43, 3, 9, 1385, 8732, 80, 3, 5, 275, 34, 225, 36, 11853, 12, 306, 38, 168, 38, 3, 76, 107, 731, 7902, 3, 5, 3, 31305, 3, 99, 34, 19, 12010, 18, 15, 2632, 4526, 1067, 19662, 4526, 1067, 3, 6, 34, 225, 34, 225, 3, 76, 107, 3, 2, 6117, 138, 17481, 2, 36, 3, 179, 12, 3, 60, 3, 76, 107, 8891, 8, 3, 76, 107, 2912, 3, 76, 107, 3, 76, 107, 306, 7, 11, 3, 76, 107, 306, 7902, 11, 731, 7902, 3, 5, 275, 3, 76, 107, 34, 225, 36, 28, 3, 76, 107, 3, 2, 6117, 138, 17481, 2, 561, 3, 2, 26, 159, 89, 3920, 49, 2, 5005, 28, 97, 52, 11, 6196, 3064, 3, 5, 275, 8, 3, 76, 107, 119, 3876, 62, 225, 3, 2, 26, 159, 89, 3920, 49, 2, 3, 76, 107, 62, 43, 16, 8, 4322, 8612, 19, 3, 9, 8891, 127, 3, 76, 107, 84, 19, 114, 3, 76, 107, 3, 76, 107, 3, 23, 34, 19, 182, 182, 231, 359, 21, 8, 6373, 3, 76, 107, 2537, 190, 3, 2, 6117, 138, 17481, 2, 190, 190, 8, 3, 76, 107, 4322, 8612, 11, 3, 76, 107, 92, 3, 9, 30181, 84, 19, 3, 9, 3, 115, 84, 19, 3, 9, 3, 51, 27, 317, 34, 31, 7, 34, 31, 7, 114, 3, 9, 3322, 3, 6, 30181, 3, 5, 1072, 25, 281, 30, 12, 8, 416, 9116, 3, 6, 754, 3, 58, 4329, 10, 283, 51, 18, 107, 635, 3, 5, 2786, 3440, 10, 283, 51, 18, 107, 635, 3, 5, 9199, 11296, 10, 412, 107, 3, 9, 1227, 32, 221, 3, 6, 3, 9, 30924, 3, 6, 3, 9, 3, 60, 739, 1016, 3, 6, 175, 33, 66, 48, 3, 76, 107, 2268, 3, 76, 107, 11924, 52, 23, 3031, 2890, 106, 7, 3, 76, 107, 3379, 84, 33, 3, 2, 26, 159, 89, 3920, 49, 2, 84, 62, 43, 12, 169, 16, 3, 9, 4322, 8612, 3, 5, 71, 3322, 3, 76, 107, 3, 6, 27, 133, 114, 12, 3130, 80, 589, 3, 76, 107, 3, 99, 62, 3, 2, 26, 159, 89, 3920, 49, 2, 3, 76, 107, 3, 99, 62, 56, 36, 3, 179, 12, 143, 3, 9, 3, 60, 7, 16489, 179, 3322, 258, 62, 6660, 62, 174, 59, 281, 21, 3, 9, 306, 821, 3322, 3, 6, 237, 3, 99, 34, 19, 3, 9, 731, 821, 3322, 34, 212, 34, 54, 31, 17, 3, 40, 34, 54, 31, 17, 1567, 231, 3, 5, 4329, 10, 283, 51, 18, 107, 635, 3, 5, 9199, 11296, 10, 94, 34, 34, 31, 7, 59, 3, 9, 306, 10594, 3322, 3, 5, 37, 29, 92, 62, 54, 3, 2, 26, 159, 89, 3920, 49, 2, 156, 34, 19, 3, 9, 16489, 179, 80, 3, 6, 258, 3, 76, 107, 151, 54, 169, 34, 21, 3, 9, 307, 97, 3, 6, 78, 16, 24, 194, 62, 54, 1340, 1340, 8, 583, 3, 6, 68, 3, 210, 3, 76, 107, 3, 76, 107, 24, 62, 43, 12, 143, 8, 3322, 38, 16489, 179, 80, 3, 5, 275, 62, 62, 43, 3, 9, 4558, 1476, 3, 76, 107, 16, 3, 9, 4322, 8612, 3, 5, 1072, 25, 281, 12, 8, 416, 9116, 3, 6, 754, 3, 5, 275, 149, 34, 930, 3, 6, 149, 8, 4322, 8612, 930, 3, 5, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [290, 225, 36, 3, 9, 1101, 11, 29386, 495, 24, 47, 59, 263, 45, 10947, 1397, 224, 38, 2343, 5, 71, 8891, 127, 6, 30181, 6, 1227, 32, 221, 6, 30924, 6, 4558, 1476, 11, 3, 60, 739, 1016, 225, 36, 16, 8, 4322, 6, 590, 28, 3, 9, 97, 52, 11, 6196, 3064, 5, 37, 4580, 4558, 228, 36, 1385, 8732, 21, 1146, 3949, 11, 225, 36, 11853, 12, 306, 11, 731, 7902, 5, 1203, 6, 3243, 53, 3379, 228, 36, 261, 3, 99, 8, 4322, 47, 12, 43, 315, 6548, 5, 242, 8, 3322, 6, 34, 228, 36, 16489, 179, 38, 151, 54, 169, 34, 21, 3, 9, 307, 97, 11, 1097, 7, 1358, 21, 999, 5, 1]}.
***** Running training *****
  Num examples = 986
  Num Epochs = 5
  Instantaneous batch size per device = 2
  Total train batch size (w. parallel, distributed & accumulation) = 16
  Gradient Accumulation steps = 8
  Total optimization steps = 310
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 28.8782, 'rouge2': 9.9394, 'rougeL': 20.367, 'rougeLsum': 25.2959}, 'ppl': {'perplexity': 96.7398, 'ref_perplexity': 13.4694}, 'bertscore': {'precision': 84.2641, 'recall': 85.6097, 'f1': 84.9165}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 31.9317, 'rouge2': 11.4216, 'rougeL': 22.4112, 'rougeLsum': 28.1338}, 'ppl': {'perplexity': 44.0881, 'ref_perplexity': 12.5734}, 'bertscore': {'precision': 85.2304, 'recall': 86.0651, 'f1': 85.6266}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 31.6629, 'rouge2': 10.7564, 'rougeL': 22.3265, 'rougeLsum': 27.5084}, 'ppl': {'perplexity': 1010.9782, 'ref_perplexity': 12.212}, 'bertscore': {'precision': 85.5985, 'recall': 85.9491, 'f1': 85.7592}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 31.2529, 'rouge2': 10.8924, 'rougeL': 22.3159, 'rougeLsum': 27.1385}, 'ppl': {'perplexity': 41.3399, 'ref_perplexity': 12.0446}, 'bertscore': {'precision': 85.737, 'recall': 85.9712, 'f1': 85.8383}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 31.7854, 'rouge2': 11.5796, 'rougeL': 23.0336, 'rougeLsum': 27.5886}, 'ppl': {'perplexity': 56.7458, 'ref_perplexity': 12.01}, 'bertscore': {'precision': 85.9444, 'recall': 86.0526, 'f1': 85.9829}}

Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round 7
Start Training!
Sample 667 of the training set: {'input_ids': [21603, 10, 12198, 1635, 1737, 8, 3071, 30, 1451, 13774, 3, 30345, 10360, 71, 10, 11475, 3, 5, 2432, 3, 6, 3, 2, 6117, 138, 17481, 2, 17945, 3, 5, 264, 6171, 62, 653, 12, 3, 6, 3, 2, 6117, 138, 17481, 2, 3, 2, 6117, 138, 17481, 2, 3, 76, 107, 3, 6, 253, 3, 2, 6117, 138, 17481, 2, 207, 753, 24, 228, 36, 261, 21, 3, 31919, 10664, 3, 6, 3, 76, 107, 3, 6, 68, 34, 3, 31, 7, 341, 3, 6, 3, 76, 107, 3, 2, 26, 159, 89, 3920, 49, 2, 30, 8, 3, 6, 561, 3, 2, 26, 159, 89, 3920, 49, 2, 3, 17, 10360, 377, 10, 3359, 3, 6, 168, 3, 6, 27, 43, 8, 1554, 3, 5, 10360, 71, 10, 62, 3, 2, 26, 159, 89, 3920, 49, 2, 3, 210, 6171, 62, 33, 341, 1556, 28, 5708, 9339, 12, 3, 2, 26, 159, 89, 3920, 49, 2, 3, 2, 6117, 138, 17481, 2, 12, 320, 44, 3, 2, 26, 159, 89, 3920, 49, 2, 44, 125, 2817, 3, 6, 10360, 205, 10, 363, 10549, 13, 3, 2, 26, 159, 89, 3920, 49, 2, 10360, 377, 10, 11475, 3, 5, 10360, 71, 10, 11, 3, 2, 26, 159, 89, 3920, 49, 2, 10360, 205, 10, 125, 10549, 13, 753, 33, 25, 479, 44, 3, 58, 10360, 377, 10, 101, 43, 128, 3, 2, 26, 159, 89, 3920, 49, 2, 10360, 71, 10, 264, 62, 133, 36, 479, 44, 3, 6, 561, 3, 6, 8, 3, 2, 9033, 2, 27154, 13, 8, 10113, 13, 8, 1215, 13903, 3, 6, 10360, 377, 10, 3, 76, 107, 3, 6, 561, 3, 6, 48, 3, 6, 48, 3, 6, 11, 48, 3, 5, 10360, 71, 10, 424, 114, 48, 3, 6, 84, 19, 3, 2, 26, 159, 89, 3920, 49, 2, 225, 36, 306, 21, 2249, 26, 2993, 3, 5, 412, 107, 3, 6, 62, 3, 2, 26, 159, 89, 3920, 49, 2, 10360, 205, 10, 14583, 3, 9, 1962, 3, 5, 27, 3, 2, 26, 159, 89, 3920, 49, 2, 125, 405, 24, 1243, 3, 58, 37, 27154, 13, 8, 10113, 13, 1215, 13903, 3, 5, 10360, 71, 10, 11475, 3, 5, 264, 8, 3, 2, 26, 159, 89, 3920, 49, 2, 264, 6171, 8, 10113, 13, 8, 1215, 13903, 3, 2, 6117, 138, 17481, 2, 21, 3, 9, 3, 18760, 16855, 3, 13658, 3240, 3, 7, 9492, 6660, 5589, 272, 10, 6902, 3, 5, 11475, 3, 6, 3, 210, 125, 3, 63, 32, 125, 25, 3, 31, 60, 3874, 8, 1215, 13903, 3, 6, 38, 27, 7881, 3, 6, 19, 25, 3, 31, 60, 31836, 53, 8, 3, 2, 26, 159, 89, 3920, 49, 2, 8, 3, 6, 561, 3, 2, 26, 159, 89, 3920, 49, 2, 8, 3, 2341, 3, 2, 26, 159, 89, 3920, 49, 2, 3, 2341, 3, 2, 26, 159, 89, 3920, 49, 2, 3, 2, 6117, 138, 17481, 2, 3, 2341, 4191, 3, 6, 3, 76, 107, 3, 6, 10113, 45, 8, 377, 6245, 10113, 3, 5, 10360, 71, 10, 3, 15, 466, 3, 31, 7, 269, 3, 5, 11475, 3, 5, 264, 3, 2, 26, 159, 89, 3920, 49, 2, 5589, 272, 10, 5068, 3, 5, 10360, 71, 10, 11475, 3, 5, 10360, 377, 10, 283, 51, 3, 18, 3, 107, 635, 3, 5, 10360, 71, 10, 264, 62, 43, 8, 3, 2341, 3, 89, 4191, 2137, 3, 6, 62, 43, 8, 377, 6245, 3, 6, 78, 62, 3, 2, 9033, 2, 131, 3, 2, 26, 159, 89, 3920, 49, 2, 5589, 272, 10, 264, 34, 3, 31, 7, 3, 2, 26, 159, 89, 3920, 49, 2, 34, 3, 31, 7, 59, 310, 46, 1215, 13903, 3, 6, 10360, 71, 10, 465, 3, 5, 5589, 272, 10, 68, 34, 3, 31, 7, 424, 24, 8858, 817, 7, 25, 424, 81, 8, 1215, 13903, 3, 5, 10360, 71, 10, 11475, 3, 6, 24, 3, 31, 7, 269, 3, 5, 5589, 272, 10, 11475, 3, 6, 17945, 3, 5, 10360, 71, 10, 2432, 3, 2, 26, 159, 89, 3920, 49, 2, 11475, 3, 5, 10360, 377, 10, 101, 43, 270, 128, 112, 17, 16275, 3, 6, 10360, 71, 10, 262, 17945, 3, 6, 10360, 377, 10, 68, 79, 43, 3, 9, 418, 13, 21655, 3, 5, 10360, 71, 10, 68, 34, 3, 31, 7, 3, 2, 26, 159, 89, 3920, 49, 2, 34, 3, 31, 7, 341, 3, 2, 26, 159, 89, 3920, 49, 2, 11475, 3, 5, 264, 3, 6, 168, 3, 6, 21, 73, 23235, 26, 4149, 62, 43, 424, 3, 189, 9, 3, 2, 6117, 138, 17481, 2, 24, 65, 3, 9, 1243, 300, 411, 500, 386, 3, 6, 11, 21, 2249, 26, 4149, 8, 1243, 19, 411, 500, 18358, 3, 18, 4169, 3, 5, 299, 8, 27154, 1727, 882, 3, 2, 6117, 138, 17481, 2, 306, 3, 5, 10360, 205, 10, 571, 103, 25, 214, 3, 2, 26, 159, 89, 3920, 49, 2, 3, 58, 10360, 71, 10, 264, 3, 2, 26, 159, 89, 3920, 49, 2, 283, 635, 3, 5, 10360, 205, 10, 571, 410, 25, 129, 39, 3, 2, 9033, 2, 2249, 26, 11, 73, 23235, 26, 2827, 331, 3, 58, 10360, 71, 10, 101, 261, 3, 6, 3, 76, 107, 3, 6, 3, 5494, 12604, 11, 62, 261, 54, 106, 1950, 14670, 7, 344, 8, 7219, 10360, 377, 10, 11475, 3, 5, 101, 3, 6, 3, 76, 107, 3, 6, 169, 3, 2, 9033, 2, 3, 5494, 12604, 30, 48, 3, 6, 10360, 71, 10, 11, 10360, 377, 10, 21, 3, 2, 26, 159, 89, 3920, 49, 2, 10360, 71, 10, 3, 189, 11475, 3, 5, 10360, 377, 10, 299, 3, 99, 62, 320, 44, 34, 16, 80, 7142, 3, 6, 34, 3, 2, 26, 159, 89, 3920, 49, 2, 8743, 34, 3, 31, 7, 207, 3, 6, 27, 317, 3, 5, 10360, 71, 10, 11475, 3, 6, 68, 3, 2, 26, 159, 89, 3920, 49, 2, 11475, 3, 5, 412, 107, 3, 6, 78, 34, 3, 31, 7, 26847, 3, 5494, 12604, 3, 5, 466, 3, 31, 7, 269, 3, 5, 11475, 3, 5, 10771, 262, 10, 94, 3, 31, 7, 26847, 3, 5494, 12604, 3, 5, 10360, 377, 10, 11475, 3, 5, 10360, 71, 10, 94, 1330, 882, 6268, 12, 4661, 3, 6, 78, 116, 62, 240, 3, 2, 26, 159, 89, 3920, 49, 2, 62, 3314, 165, 8755, 640, 97, 21, 3, 9, 1349, 7142, 11, 258, 1746, 7, 8, 337, 26847, 7142, 3, 6, 34, 3, 31, 7, 182, 885, 3, 5, 5589, 272, 10, 283, 51, 3, 18, 3, 107, 635, 3, 5, 10360, 71, 10, 11475, 3, 5, 264, 132, 33, 3, 2, 26, 159, 89, 3920, 49, 2, 132, 19, 48, 3, 5, 290, 228, 36, 92, 8, 3, 6, 561, 3, 2, 26, 159, 89, 3920, 49, 2, 3, 2, 6117, 138, 17481, 2, 424, 114, 8, 2411, 13, 8, 1510, 3, 18, 18712, 1681, 42, 3, 2, 26, 159, 89, 3920, 49, 2, 84, 3, 2, 26, 159, 89, 3920, 49, 2, 10360, 205, 10, 27, 7, 48, 3, 9, 3, 2, 26, 159, 89, 3920, 49, 2, 3, 9, 3, 7, 3, 9, 4252, 358, 3, 58, 955, 19, 34, 3, 9, 358, 213, 25, 131, 1432, 128, 12709, 7, 3, 58, 1546, 3, 18, 149, 405, 34, 161, 3, 58, 10360, 71, 10, 5068, 230, 62, 131, 33, 1119, 12, 253, 128, 753, 3, 5, 275, 3, 6, 10360, 205, 10, 283, 51, 3, 18, 3, 107, 635, 3, 5, 10360, 71, 10, 3, 76, 107, 3, 2, 26, 159, 89, 3920, 49, 2, 11475, 3, 5, 3, 12599, 3, 6, 27, 317, 125, 62, 241, 12, 43, 19, 12, 474, 175, 753, 16, 3, 7, 128, 773, 13, 3, 6, 561, 3, 2, 26, 159, 89, 3920, 49, 2, 168, 3, 6, 12, 3, 2, 26, 159, 89, 3920, 49, 2, 12, 3442, 3, 9, 11775, 825, 30, 175, 753, 11, 12, 3, 2, 26, 159, 89, 3920, 49, 2, 42, 131, 12, 169, 3, 9, 24228, 1229, 11, 8858, 175, 753, 3, 210, 133, 199, 3, 2, 26, 159, 89, 3920, 49, 2, 10360, 205, 10, 2070, 34, 1330, 114, 125, 25, 243, 81, 8, 1243, 13, 8, 3, 2, 26, 159, 89, 3920, 49, 2, 8, 2249, 26, 11, 8, 73, 23235, 26, 3, 2, 26, 159, 89, 3920, 49, 2, 3, 2, 287, 297, 2, 3, 2, 6117, 138, 17481, 2, 24, 3776, 1134, 9523, 3, 5, 10360, 71, 10, 283, 51, 3, 18, 3, 107, 635, 3, 5, 5589, 272, 10, 1548, 3, 6, 17945, 3, 6, 3578, 8, 27154, 47, 600, 3, 5, 10360, 205, 10, 5068, 3, 58, 10360, 71, 10, 11475, 3, 5, 20537, 8, 27154, 19, 882, 306, 3, 5, 5589, 272, 10, 5068, 3, 58, 10360, 205, 10, 1548, 3, 6, 3, 63, 10360, 71, 10, 11475, 3, 5, 10360, 205, 10, 1548, 3, 6, 3, 63, 27, 3, 2, 26, 159, 89, 3920, 49, 2, 27, 278, 31, 17, 214, 24, 27, 133, 2019, 24, 78, 231, 250, 25, 3, 31, 60, 692, 175, 54, 106, 1950, 14670, 7, 45, 3, 5494, 12604, 3783, 697, 7, 3, 5, 10360, 71, 10, 412, 107, 3, 18, 3, 28848, 3, 5, 10360, 205, 10, 5068, 3, 58, 264, 3, 6, 310, 24, 3, 31, 7, 1843, 13, 3, 9, 15074, 1554, 81, 125, 3, 31, 7, 2249, 26, 11, 73, 23235, 26, 3, 5, 264, 24, 228, 36, 1517, 25, 3, 9, 418, 13, 27154, 3, 5, 10360, 71, 10, 11475, 3, 5, 10360, 205, 10, 27, 1243, 3, 6, 3, 23, 34, 3, 2, 26, 159, 89, 3920, 49, 2, 34, 164, 36, 24, 3, 2, 26, 159, 89, 3920, 49, 2, 24, 25, 3, 31, 60, 2342, 424, 207, 11, 24, 8, 27154, 19, 1843, 13, 7353, 250, 13, 149, 25, 3, 31, 60, 652, 39, 2827, 3, 5, 10360, 71, 10, 283, 51, 3, 18, 3, 107, 635, 3, 5, 5589, 272, 10, 11475, 3, 5, 299, 430, 194, 13, 479, 44, 34, 3, 2, 6117, 138, 17481, 2, 429, 36, 24, 3, 2, 26, 159, 89, 3920, 49, 2, 27, 1243, 3, 6, 125, 3, 210, 62, 62, 33, 1107, 95, 28, 1451, 3369, 227, 66, 3, 5, 264, 430, 194, 13, 479, 44, 34, 19, 24, 3, 2, 6117, 138, 17481, 2, 561, 3, 6, 8, 3, 2341, 197, 102, 6159, 3, 2341, 3, 2, 9033, 2, 10113, 3, 6, 3, 2341, 197, 102, 6159, 51, 3, 6, 3, 2, 6117, 138, 17481, 2, 136, 13, 175, 6826, 7, 3, 6, 561, 3, 6, 428, 25, 8, 3050, 10113, 3, 5, 94, 3, 31, 7, 8, 3, 5628, 4900, 14669, 3, 5, 938, 352, 223, 12, 8, 377, 6245, 3, 6, 3, 2, 6117, 138, 17481, 2, 25, 3, 31, 60, 652, 424, 24, 19, 3, 2, 9033, 2, 72, 114, 8, 5902, 331, 3, 5, 264, 8, 822, 19, 3, 6, 125, 3, 28561, 3, 2, 26, 159, 89, 3920, 49, 2, 11, 25, 3, 31, 60, 1556, 300, 28, 48, 3, 2, 26, 159, 89, 3920, 49, 2, 430, 194, 13, 479, 44, 34, 19, 125, 3, 28561, 3, 2, 6117, 138, 17481, 2, 13, 8, 1750, 344, 3, 2, 9033, 2, 8, 5902, 331, 3, 2, 9033, 2, 11, 48, 3050, 988, 3, 2, 9033, 2, 19, 424, 24, 25, 3, 31, 60, 3586, 24, 228, 199, 3, 58, 264, 3, 6, 27, 1243, 3, 6, 479, 44, 315, 11775, 3629, 13, 24, 1750, 3, 6, 1107, 95, 28, 128, 378, 11, 131, 1119, 135, 91, 11, 2492, 3, 99, 25, 617, 135, 2400, 8, 1451, 12938, 405, 24, 143, 378, 394, 42, 4131, 16, 4661, 3, 6, 213, 25, 3, 31, 60, 310, 131, 3, 23, 3, 23, 8, 194, 27, 3, 31, 51, 479, 44, 34, 19, 59, 78, 231, 25, 3, 31, 60, 1119, 12, 3, 89, 253, 8, 200, 3, 2, 26, 159, 89, 3920, 49, 2, 8, 296, 3, 31, 7, 200, 2249, 26, 3, 18, 73, 23235, 26, 3, 6, 3, 76, 107, 3, 6, 3, 76, 107, 3, 6, 853, 7903, 3, 6, 10360, 205, 10, 283, 51, 3, 18, 3, 107, 635, 1], 'attention_masklabels': [37, 1451, 13774, 141, 598, 13, 3, 19997, 21, 2249, 26, 11, 4097, 3390, 21, 73, 23235, 26, 30, 2249, 18, 202, 23235, 6, 713, 8, 27154, 47, 882, 306, 5, 37, 372, 47, 338, 3, 5494, 12604, 11, 47, 16, 8, 1726, 13, 479, 21, 753, 5, 37, 5812, 816, 24, 8, 372, 31, 7, 26207, 47, 1374, 135, 12, 143, 11775, 3, 28561, 7, 13, 125, 47, 3586, 45, 8, 3, 5628, 4900, 14669, 5, 328, 228, 169, 378, 79, 130, 6149, 5489, 16, 8, 3050, 53, 433, 5, 1]}.
***** Running training *****
  Num examples = 986
  Num Epochs = 5
  Instantaneous batch size per device = 2
  Total train batch size (w. parallel, distributed & accumulation) = 16
  Gradient Accumulation steps = 8
  Total optimization steps = 310
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 29.0372, 'rouge2': 8.5318, 'rougeL': 19.474, 'rougeLsum': 25.0335}, 'ppl': {'perplexity': 37.6905, 'ref_perplexity': 17.8933}, 'bertscore': {'precision': 84.2584, 'recall': 85.5604, 'f1': 84.8897}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 29.9745, 'rouge2': 9.4941, 'rougeL': 20.7437, 'rougeLsum': 25.4546}, 'ppl': {'perplexity': 55.2513, 'ref_perplexity': 16.5335}, 'bertscore': {'precision': 85.1621, 'recall': 85.7661, 'f1': 85.4455}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 30.3392, 'rouge2': 9.5249, 'rougeL': 21.453, 'rougeLsum': 25.8381}, 'ppl': {'perplexity': 14.3594, 'ref_perplexity': 15.9567}, 'bertscore': {'precision': 85.6008, 'recall': 85.7365, 'f1': 85.6494}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 30.5116, 'rouge2': 9.8732, 'rougeL': 21.584, 'rougeLsum': 26.0882}, 'ppl': {'perplexity': 9.5111, 'ref_perplexity': 15.7792}, 'bertscore': {'precision': 85.5291, 'recall': 85.776, 'f1': 85.6344}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 30.2463, 'rouge2': 9.8268, 'rougeL': 21.3874, 'rougeLsum': 25.7905}, 'ppl': {'perplexity': 9.531, 'ref_perplexity': 15.6922}, 'bertscore': {'precision': 85.4655, 'recall': 85.7164, 'f1': 85.5734}}

Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round 8
Start Training!
Sample 388 of the training set: {'input_ids': [21603, 10, 363, 1030, 410, 9199, 11296, 428, 116, 3, 13505, 4322, 610, 14402, 58, 3, 30345, 9199, 11296, 10, 412, 107, 8957, 62, 6171, 43, 8, 337, 773, 9, 8260, 18, 670, 270, 34, 31, 7, 131, 561, 25, 1520, 34, 114, 48, 11, 34, 2347, 773, 9, 19094, 15, 26, 12, 8, 12, 8, 2346, 13, 39, 609, 3, 6, 6171, 3, 5, 2432, 30, 8, 646, 62, 31, 162, 530, 8, 11930, 21, 8, 2908, 3, 6, 30, 8, 269, 62, 43, 10634, 21, 8, 6047, 95, 11, 323, 11, 24, 773, 9, 3, 2, 26, 159, 89, 3920, 49, 2, 78, 25, 54, 1520, 34, 11, 11930, 3, 6, 42, 25, 54, 1520, 34, 11, 11, 3292, 3, 5, 2786, 3440, 10, 3, 2, 6117, 138, 17481, 2, 9199, 11296, 10, 412, 107, 48, 19, 8, 579, 843, 3, 6, 561, 34, 31, 7, 773, 9, 114, 8, 2630, 78, 25, 214, 149, 12, 919, 30, 3, 5, 2786, 3440, 10, 412, 107, 18, 28848, 3, 5, 9199, 11296, 10, 412, 107, 24, 31, 7, 8, 385, 2285, 843, 3, 5, 100, 19, 8, 16, 89, 52, 9, 18, 1271, 1375, 78, 25, 3, 122, 34, 31, 195, 36, 5657, 3, 2866, 7, 11, 3, 99, 25, 31, 60, 25, 214, 3, 15989, 34, 114, 24, 34, 54, 1299, 34, 3, 6, 2786, 3440, 10, 7271, 102, 3, 6, 9199, 11296, 10, 42, 3, 99, 25, 1520, 34, 95, 114, 24, 34, 31, 195, 1299, 34, 3, 5, 2786, 3440, 10, 17945, 3, 6, 207, 3, 6, 207, 3, 5, 9199, 11296, 10, 412, 107, 62, 530, 3, 9, 18701, 132, 84, 21, 66, 8, 2249, 16565, 2786, 3440, 10, 412, 107, 18, 28848, 3, 5, 9199, 11296, 10, 78, 25, 54, 25, 214, 1350, 12, 34, 114, 24, 2786, 3440, 10, 7271, 102, 3, 6, 9199, 11296, 10, 11, 34, 31, 195, 341, 734, 3, 5, 2786, 3440, 10, 269, 3, 5, 9199, 11296, 10, 2432, 8, 3554, 19, 323, 323, 132, 561, 2786, 3440, 10, 412, 107, 18, 28848, 3, 5, 6674, 25064, 10, 283, 51, 3, 5, 9199, 11296, 10, 11, 3, 2, 122, 9, 102, 2, 65, 8, 1189, 30, 34, 6674, 25064, 10, 180, 9199, 11296, 10, 11, 25, 54, 217, 114, 34, 131, 773, 9, 1550, 3, 2, 26, 159, 89, 3920, 49, 2, 8, 1131, 720, 31, 7, 8, 1189, 11, 34, 773, 9, 1550, 147, 762, 2786, 3440, 10, 7271, 102, 3, 6, 3, 63, 15, 102, 3, 6, 9199, 11296, 10, 11, 258, 132, 31, 7, 8034, 21, 8, 10634, 12, 369, 190, 3, 5, 2432, 3, 5, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [37, 4322, 610, 133, 36, 19094, 15, 26, 12, 8, 2346, 13, 8, 609, 116, 151, 1213, 34, 5, 461, 8, 646, 132, 47, 3, 9, 23676, 21, 8, 2908, 6, 11, 30, 8, 269, 132, 130, 633, 10634, 5, 37, 579, 843, 133, 36, 8, 2630, 78, 24, 151, 2124, 149, 12, 919, 30, 8, 4390, 5, 290, 133, 92, 36, 3, 9, 18701, 21, 66, 8, 2249, 16565, 5, 1]}.
***** Running training *****
  Num examples = 986
  Num Epochs = 5
  Instantaneous batch size per device = 2
  Total train batch size (w. parallel, distributed & accumulation) = 16
  Gradient Accumulation steps = 8
  Total optimization steps = 310
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 29.5563, 'rouge2': 9.4423, 'rougeL': 20.2447, 'rougeLsum': 25.8163}, 'ppl': {'perplexity': 32.9668, 'ref_perplexity': 12.6303}, 'bertscore': {'precision': 84.1793, 'recall': 85.4265, 'f1': 84.7804}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 33.1349, 'rouge2': 12.668, 'rougeL': 23.6446, 'rougeLsum': 29.7852}, 'ppl': {'perplexity': 13.3542, 'ref_perplexity': 11.5204}, 'bertscore': {'precision': 85.2829, 'recall': 85.9774, 'f1': 85.6109}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 32.8659, 'rouge2': 12.3216, 'rougeL': 23.8127, 'rougeLsum': 28.9211}, 'ppl': {'perplexity': 62.6262, 'ref_perplexity': 11.1063}, 'bertscore': {'precision': 85.3628, 'recall': 85.8319, 'f1': 85.5776}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 33.0398, 'rouge2': 12.6194, 'rougeL': 24.0154, 'rougeLsum': 29.5578}, 'ppl': {'perplexity': 1306.0441, 'ref_perplexity': 10.9092}, 'bertscore': {'precision': 85.4867, 'recall': 86.0376, 'f1': 85.7437}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 33.1609, 'rouge2': 12.6505, 'rougeL': 24.0389, 'rougeLsum': 29.3856}, 'ppl': {'perplexity': 1302.9971, 'ref_perplexity': 10.8588}, 'bertscore': {'precision': 85.5188, 'recall': 85.9744, 'f1': 85.7274}}

Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round 9
Start Training!
Sample 807 of the training set: {'input_ids': [21603, 10, 571, 410, 10976, 7, 17, 63, 6060, 5422, 515, 12, 5658, 8, 14568, 297, 6813, 344, 3, 30801, 14614, 11, 70, 72, 3, 9, 89, 6947, 295, 13359, 58, 3, 30345, 21903, 10715, 537, 5422, 10, 2163, 6, 82, 336, 822, 19, 310, 81, 8, 1055, 21, 8, 14568, 297, 6813, 344, 3, 30801, 14614, 11, 70, 72, 3, 9, 89, 6947, 295, 13359, 5, 27, 7, 24, 3, 9, 2410, 21, 25, 58, 27, 31, 51, 1631, 1989, 16, 4689, 12, 273, 705, 3, 9, 89, 6947, 295, 1791, 16, 578, 592, 12, 748, 11, 78, 30, 5, 363, 773, 13, 3315, 103, 25, 43, 81, 24, 11, 125, 33, 62, 479, 12, 103, 12, 653, 12, 766, 24, 24, 744, 31, 17, 700, 577, 91, 58, 10976, 7, 17, 63, 6060, 5422, 10, 1562, 25, 6, 21903, 5, 432, 13, 8, 7475, 133, 817, 178, 24, 1036, 1453, 11, 8, 6813, 6, 6149, 6, 56, 2603, 273, 72, 9930, 502, 8, 167, 5, 3, 22355, 6, 62, 56, 241, 12, 1099, 24, 38, 62, 317, 81, 125, 8, 126, 1389, 21, 1073, 164, 320, 114, 6, 42, 38, 62, 1344, 139, 647, 17258, 5, 3, 11333, 30, 213, 24, 861, 19, 16, 70, 3472, 2027, 6, 13, 503, 6, 8, 523, 11, 8, 1055, 21, 1453, 33, 3300, 315, 5, 264, 6, 21, 3421, 6, 116, 62, 31, 60, 1631, 81, 182, 1021, 502, 6, 62, 228, 36, 1631, 81, 3, 9, 2136, 13, 569, 6565, 11, 8, 606, 13, 42, 4710, 1098, 5, 1129, 503, 6, 24, 6, 6149, 6, 258, 56, 43, 3, 9, 7673, 18, 106, 12, 70, 1418, 12, 669, 12, 608, 11, 258, 12, 1431, 6, 21, 3421, 5, 242, 119, 502, 113, 33, 6, 2361, 6, 2749, 11, 6904, 1587, 4727, 6498, 7, 6, 8, 1921, 116, 79, 1205, 12, 496, 56, 36, 3, 9, 3300, 315, 80, 5, 27, 31, 51, 59, 417, 6, 6651, 6, 823, 25, 241, 140, 12, 428, 128, 856, 1030, 81, 69, 23534, 18, 858, 18, 20779, 515, 11, 149, 62, 33, 479, 12, 1115, 1125, 18093, 230, 6, 42, 823, 132, 33, 746, 865, 5, 18932, 15, 1484, 9, 3537, 5422, 10, 1548, 6, 27, 31, 162, 530, 3, 9, 822, 30, 24, 1107, 95, 6, 78, 6, 3, 99, 34, 31, 7, 8957, 6, 21903, 6, 62, 31, 195, 281, 30, 12, 24, 230, 5, 3103, 62, 103, 24, 6, 27, 47, 131, 352, 12, 987, 149, 8, 22982, 3141, 19, 3788, 788, 3553, 12, 8, 907, 9638, 11347, 30, 8, 10226, 13, 8, 9364, 11, 6, 6865, 6, 8, 269, 502, 11, 1021, 151, 43, 12, 46, 1073, 5, 27, 47, 352, 12, 987, 25, 81, 8, 1020, 13, 25608, 788, 12, 3, 14177, 592, 12, 1125, 1438, 6, 84, 33, 78, 359, 16, 3, 5833, 23534, 13, 1036, 5, 10976, 7, 17, 63, 6060, 5422, 10, 148, 31, 60, 2997, 2024, 6, 6651, 5, 13686, 7, 33, 182, 2718, 13, 69, 3, 9406, 1587, 502, 31, 7, 2166, 16, 48, 3553, 11, 62, 33, 692, 2891, 62, 54, 12, 766, 24, 502, 43, 46, 4081, 1004, 11, 43, 4081, 592, 12, 1036, 44, 48, 97, 5, 101, 33, 14276, 16, 8, 3553, 24, 6, 250, 13, 1767, 3055, 11, 7686, 6, 62, 43, 3, 9, 1101, 1247, 30, 84, 12, 918, 250, 62, 43, 69, 454, 210, 115, 1125, 1036, 1585, 11, 250, 62, 43, 11496, 8672, 16, 8, 1157, 6063, 13, 2803, 2126, 11, 1163, 21, 2855, 1339, 6, 84, 33, 347, 12, 66, 1791, 5, 101, 43, 582, 8, 166, 6, 27, 317, 318, 1123, 31, 60, 1852, 8, 166, 16, 8, 1270, 6, 11, 27, 31, 51, 59, 417, 823, 62, 31, 60, 8, 166, 640, 8, 296, 6, 68, 27, 317, 62, 1077, 33, 318, 235, 17274, 6, 21, 3421, 6, 11551, 15036, 16405, 5, 299, 6, 6865, 6, 592, 12, 4214, 11, 12841, 19, 4462, 44, 48, 97, 5, 13686, 7, 33, 464, 28, 415, 5779, 12, 766, 24, 66, 502, 43, 592, 12, 321, 8, 4214, 11, 8, 12841, 79, 174, 12, 36, 3, 179, 12, 3716, 16, 1125, 1036, 44, 48, 1090, 97, 5, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [10976, 7, 17, 63, 6060, 5422, 166, 3665, 8, 1256, 1419, 38, 271, 522, 57, 175, 563, 13, 502, 6, 3, 2544, 3472, 2027, 133, 36, 3300, 315, 28, 717, 5, 275, 34, 47, 373, 359, 24, 502, 228, 43, 46, 4081, 1004, 11, 43, 4081, 592, 12, 1036, 44, 48, 97, 5, 304, 8000, 8, 1921, 6, 454, 210, 115, 1125, 1036, 1585, 141, 118, 8672, 11496, 11, 8, 789, 141, 92, 11496, 8672, 16, 8, 1157, 6063, 13, 2803, 2126, 11, 1163, 21, 2855, 1339, 6, 84, 130, 347, 12, 66, 1791, 5, 7940, 6, 2135, 12, 8, 1284, 133, 856, 36, 9552, 5, 1]}.
***** Running training *****
  Num examples = 986
  Num Epochs = 5
  Instantaneous batch size per device = 2
  Total train batch size (w. parallel, distributed & accumulation) = 16
  Gradient Accumulation steps = 8
  Total optimization steps = 310
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 29.3033, 'rouge2': 9.16, 'rougeL': 19.2978, 'rougeLsum': 25.7287}, 'ppl': {'perplexity': 282.5918, 'ref_perplexity': 17.8866}, 'bertscore': {'precision': 84.4233, 'recall': 85.6771, 'f1': 85.0334}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 29.9154, 'rouge2': 9.5535, 'rougeL': 20.2617, 'rougeLsum': 26.1709}, 'ppl': {'perplexity': 210.949, 'ref_perplexity': 16.5229}, 'bertscore': {'precision': 84.7355, 'recall': 85.7477, 'f1': 85.2229}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 31.0405, 'rouge2': 10.2299, 'rougeL': 21.2605, 'rougeLsum': 27.2977}, 'ppl': {'perplexity': 11.0076, 'ref_perplexity': 16.0936}, 'bertscore': {'precision': 85.186, 'recall': 85.8965, 'f1': 85.5237}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 30.4981, 'rouge2': 10.1345, 'rougeL': 21.0864, 'rougeLsum': 26.8715}, 'ppl': {'perplexity': 10.6671, 'ref_perplexity': 15.934}, 'bertscore': {'precision': 85.0637, 'recall': 85.9483, 'f1': 85.4876}}
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 30.8432, 'rouge2': 10.4665, 'rougeL': 21.2723, 'rougeLsum': 27.2525}, 'ppl': {'perplexity': 55.0214, 'ref_perplexity': 15.8793}, 'bertscore': {'precision': 85.0987, 'recall': 85.9684, 'f1': 85.5165}}

Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round 10
Start Training!
Sample 214 of the training set: {'input_ids': [21603, 10, 363, 410, 2786, 3440, 317, 81, 827, 1391, 58, 3, 30345, 2786, 3440, 10, 27, 317, 39, 500, 81, 8, 8, 600, 827, 1391, 19, 3, 76, 107, 3, 9, 182, 3982, 80, 3, 5, 9199, 11296, 10, 283, 51, 3, 5, 2786, 3440, 10, 2432, 27, 278, 31, 17, 11605, 62, 31, 162, 530, 136, 7475, 30, 8, 8, 280, 1672, 6833, 13, 3, 76, 107, 4322, 7415, 3, 6, 1989, 1843, 13, 2547, 2102, 3, 5, 2432, 787, 25, 214, 3, 6, 8, 381, 13, 378, 25, 805, 175, 477, 3, 6, 84, 25, 214, 3, 6, 43, 3, 9, 3, 9, 3, 9, 26780, 2891, 3322, 16, 3, 6, 24, 31, 7, 3, 76, 107, 3, 6, 25, 214, 470, 523, 11906, 3, 5, 9199, 11296, 10, 3, 2, 6117, 138, 17481, 2, 2786, 3440, 10, 2432, 2361, 62, 225, 43, 8, 8, 26139, 4322, 610, 3, 6, 3, 76, 107, 561, 25, 214, 3, 6, 80, 3, 2, 26, 159, 89, 3920, 49, 2, 128, 1843, 13, 4541, 4742, 3, 5, 148, 214, 3, 6, 8, 8, 8, 3322, 56, 336, 214, 3, 6, 874, 3, 6, 3, 324, 203, 3, 5, 938, 84, 97, 3, 2, 26, 159, 89, 3920, 49, 2, 27, 1243, 116, 66, 31, 7, 243, 11, 612, 3, 6, 8, 1125, 4390, 3, 2, 6117, 138, 17481, 2, 56, 36, 838, 147, 16, 24, 97, 2643, 3, 5, 2432, 9199, 11296, 10, 283, 51, 3, 5, 4329, 10, 283, 51, 18, 107, 635, 3, 5, 2786, 3440, 10, 3, 76, 107, 3, 76, 107, 3, 102, 2361, 62, 225, 3, 6, 214, 3, 6, 1428, 8, 3, 76, 107, 3, 6, 25, 214, 3, 6, 8, 1843, 13, 1735, 1467, 237, 72, 57, 59, 237, 578, 3, 9, 3322, 17581, 11, 3, 76, 107, 3, 2, 26, 159, 89, 3920, 49, 2, 9199, 11296, 10, 1142, 578, 80, 24, 31, 7, 7206, 12, 336, 874, 12, 3, 324, 203, 3, 58, 2786, 3440, 10, 11475, 3, 6, 11, 3, 99, 3, 99, 13112, 1865, 7, 12, 661, 34, 323, 3, 6, 62, 31, 195, 62, 31, 195, 428, 3, 31, 15, 51, 3, 9, 126, 80, 3, 5, 9199, 11296, 10, 3359, 3, 6, 1633, 3, 5, 3, 2, 6117, 138, 17481, 2, 11475, 3, 6, 2725, 631, 3, 5, 6674, 25064, 10, 3, 2, 6117, 138, 17481, 2, 2786, 3440, 10, 2432, 34, 31, 7, 3, 6, 25, 214, 3, 6, 34, 31, 7, 3, 2, 26, 159, 89, 3920, 49, 2, 125, 34, 1097, 7, 16, 583, 11, 25, 214, 132, 132, 31, 7, 3, 9, 3, 2, 26, 159, 89, 3920, 49, 2, 168, 3, 6, 34, 31, 7, 700, 3, 9, 1070, 3, 122, 23, 635, 3142, 3, 5, 27, 1243, 34, 31, 7, 3, 10942, 3, 9, 3, 122, 23, 635, 3142, 3, 6, 34, 31, 7, 3, 76, 107, 34, 31, 7, 3536, 3236, 3, 5, 412, 107, 78, 27, 3, 189, 317, 25, 214, 8, 800, 13, 3, 9, 16489, 179, 80, 19, 561, 3, 76, 107, 3, 3227, 25, 31, 60, 310, 306, 5256, 11, 34, 1843, 13, 131, 16489, 7, 1402, 3, 99, 34, 31, 7, 3, 29, 57, 3, 6, 25, 214, 3, 6, 10224, 9866, 42, 2891, 3, 6, 3, 99, 3, 99, 34, 3, 2, 26, 159, 89, 3920, 49, 2, 4329, 10, 94, 228, 43, 114, 3, 76, 107, 3, 2, 26, 159, 89, 3920, 49, 2, 214, 114, 3, 9, 7496, 924, 951, 16, 39, 629, 34, 3, 7, 530, 114, 3, 9, 1247, 24, 2561, 7, 132, 66, 8, 97, 3, 5, 2786, 3440, 10, 11475, 3, 5, 3, 2, 6117, 138, 17481, 2, 9199, 11296, 10, 283, 51, 3, 6, 3, 635, 3, 5, 2786, 3440, 10, 1521, 33, 151, 310, 3, 13366, 169, 34, 713, 3, 58, 2432, 3, 5, 6674, 25064, 10, 11475, 3, 6, 151, 33, 813, 4329, 10, 3, 2, 6117, 138, 17481, 2, 27, 11605, 3, 6, 17945, 3, 5, 9199, 11296, 10, 283, 51, 17945, 3, 2, 6117, 138, 17481, 2, 6674, 25064, 10, 27, 133, 317, 24, 151, 429, 2612, 3, 2, 26, 159, 89, 3920, 49, 2, 2786, 3440, 10, 27, 27, 3, 189, 27, 317, 3, 2, 26, 159, 89, 3920, 49, 2, 6674, 25064, 10, 27, 1243, 151, 2612, 12, 474, 70, 7496, 924, 7219, 223, 30, 132, 3, 6, 4329, 10, 3, 2, 122, 9, 102, 2, 9199, 11296, 10, 283, 51, 18, 635, 3, 5, 6674, 25064, 10, 78, 3, 5, 2786, 3440, 10, 11475, 3, 6, 34, 31, 7, 4329, 10, 3, 2, 6117, 138, 17481, 2, 11475, 3, 5, 3, 2, 6117, 138, 17481, 2, 2786, 3440, 10, 561, 3, 2, 26, 159, 89, 3920, 49, 2, 27, 1243, 27, 214, 24, 128, 23, 648, 82, 82, 2512, 1550, 91, 16, 8, 1379, 11, 845, 3, 32, 107, 27, 225, 43, 474, 8, 951, 30, 12, 1567, 9199, 11296, 10, 283, 51, 3, 5, 2786, 3440, 10, 11, 258, 258, 255, 31, 7, 141, 273, 21, 78, 307, 24, 3, 99, 255, 65, 29, 31, 17, 1279, 24, 91, 57, 230, 3, 5, 2432, 3, 5, 9199, 11296, 10, 3, 31, 254, 9, 1074, 27, 163, 1423, 12, 1567, 82, 2358, 951, 3, 76, 107, 116, 3322, 67, 7, 3, 5, 3, 2, 6117, 138, 17481, 2, 275, 24, 31, 7, 1134, 231, 3, 2, 26, 159, 89, 3920, 49, 2, 6674, 25064, 10, 3, 2, 6117, 138, 17481, 2, 11475, 3, 5, 4329, 10, 3, 2, 6117, 138, 17481, 2, 2786, 3440, 10, 366, 34, 3, 2, 26, 159, 89, 3920, 49, 2, 17945, 3, 6, 14228, 116, 34, 31, 7, 3977, 19, 3, 9, 682, 3, 5, 9199, 11296, 10, 17945, 3, 5, 11475, 3, 6, 116, 34, 5050, 1402, 326, 3, 6, 24, 31, 7, 116, 27, 6635, 34, 16, 3, 6, 2786, 3440, 10, 11475, 3, 6, 17945, 3, 6, 17945, 3, 6, 3, 2, 122, 9, 102, 2, 78, 3, 76, 107, 561, 9199, 11296, 10, 17945, 3, 5, 3, 2, 6117, 138, 17481, 2, 6674, 25064, 10, 3, 2, 6117, 138, 17481, 2, 2786, 3440, 10, 125, 78, 14228, 125, 125, 103, 62, 317, 81, 8, 561, 8, 8, 3574, 3, 635, 3322, 3, 58, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [2786, 3440, 6241, 12, 43, 26139, 4322, 610, 13, 84, 3322, 280, 47, 554, 22755, 11, 4382, 12, 888, 1467, 72, 57, 59, 237, 578, 3, 9, 3322, 17581, 5, 37, 4742, 13, 3574, 9121, 47, 92, 4382, 5, 1]}.
***** Running training *****
  Num examples = 981
  Num Epochs = 5
  Instantaneous batch size per device = 2
  Total train batch size (w. parallel, distributed & accumulation) = 16
  Gradient Accumulation steps = 8
  Total optimization steps = 310
***** Running testing *****
  Num examples = 114
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 28.1978, 'rouge2': 8.4004, 'rougeL': 19.5992, 'rougeLsum': 24.1812}, 'ppl': {'perplexity': 61.9763, 'ref_perplexity': 16.6583}, 'bertscore': {'precision': 84.3473, 'recall': 85.1773, 'f1': 84.7413}}
***** Running testing *****
  Num examples = 114
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 29.7747, 'rouge2': 9.3716, 'rougeL': 20.7634, 'rougeLsum': 25.9309}, 'ppl': {'perplexity': 230.3346, 'ref_perplexity': 15.4315}, 'bertscore': {'precision': 85.0737, 'recall': 85.5818, 'f1': 85.3063}}
***** Running testing *****
  Num examples = 114
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 30.182, 'rouge2': 9.5167, 'rougeL': 21.2075, 'rougeLsum': 26.08}, 'ppl': {'perplexity': 181.4617, 'ref_perplexity': 14.9905}, 'bertscore': {'precision': 85.2249, 'recall': 85.6188, 'f1': 85.4025}}
***** Running testing *****
  Num examples = 114
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 30.6745, 'rouge2': 9.6046, 'rougeL': 21.3707, 'rougeLsum': 26.2814}, 'ppl': {'perplexity': 51.624, 'ref_perplexity': 14.7735}, 'bertscore': {'precision': 85.2748, 'recall': 85.697, 'f1': 85.4654}}
***** Running testing *****
  Num examples = 114
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 30.3283, 'rouge2': 9.3566, 'rougeL': 21.2559, 'rougeLsum': 26.1005}, 'ppl': {'perplexity': 79.9802, 'ref_perplexity': 14.7059}, 'bertscore': {'precision': 85.3052, 'recall': 85.5894, 'f1': 85.4284}}

Start Predicting!
***** Running testing *****
  Num examples = 114
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Round All
Start Training!
Sample 192 of the training set: {'input_ids': [21603, 10, 1615, 410, 4329, 1568, 12, 11610, 8, 2387, 512, 116, 12104, 1030, 13, 2218, 408, 11, 1128, 1681, 58, 3, 30345, 4329, 10, 68, 27, 317, 62, 278, 31, 17, 43, 3, 9, 806, 2417, 3, 6, 25, 214, 3, 6, 114, 125, 19, 69, 2387, 2417, 3, 6, 125, 11276, 33, 3, 2, 26, 159, 89, 3920, 49, 2, 11276, 33, 62, 1119, 12, 512, 11, 2752, 3, 5, 148, 214, 3, 6, 25, 214, 125, 27, 31, 51, 2145, 3, 6, 114, 3, 6, 21, 4068, 19, 48, 3855, 3, 58, 2181, 6965, 3, 58, 2786, 3440, 10, 3, 2, 6117, 138, 17481, 2, 27, 317, 34, 228, 1077, 36, 3, 8287, 44, 167, 151, 113, 31, 162, 261, 3, 9, 1156, 3, 5, 275, 24, 429, 36, 131, 430, 194, 13, 2145, 653, 12, 2387, 167, 151, 3, 5, 4329, 10, 1377, 151, 3, 6, 17945, 3, 5, 6674, 25064, 10, 283, 51, 3, 5, 2786, 3440, 10, 2432, 3, 6, 3, 99, 62, 33, 3, 99, 62, 130, 12, 1130, 24, 18836, 3, 6, 62, 429, 36, 3, 7, 25, 214, 561, 62, 31, 60, 773, 13, 966, 3, 4610, 53, 30, 70, 351, 28, 3, 9, 1156, 951, 27, 11605, 3, 5, 299, 24, 405, 1189, 3, 9, 182, 508, 1375, 13, 8, 151, 91, 132, 3, 5, 4329, 10, 283, 51, 18, 107, 635, 3, 5, 10625, 3, 5, 27, 317, 24, 31, 7, 2725, 3, 2, 6117, 138, 17481, 2, 17945, 3, 5, 6674, 25064, 10, 283, 51, 3, 5, 2786, 3440, 10, 2432, 3, 6, 27, 1243, 27, 3034, 38, 168, 24, 8, 1805, 301, 834, 254, 834, 308, 834, 11, 2087, 12, 3, 9, 824, 5996, 8, 3922, 9656, 38, 168, 133, 36, 21, 8, 1151, 6730, 3, 5, 4073, 2087, 744, 31, 17, 129, 261, 38, 557, 3, 6, 2087, 34, 656, 34, 514, 21, 135, 12, 2320, 91, 149, 12, 561, 483, 8, 6047, 38, 16, 8, 23446, 11, 224, 21, 3, 60, 7050, 53, 34, 3, 5, 4329, 10, 283, 51, 18, 107, 635, 3, 5, 1], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [2786, 3440, 816, 24, 8, 3459, 408, 47, 341, 59, 12954, 11, 1934, 631, 21, 230, 5, 4329, 4686, 11, 8744, 91, 24, 8, 915, 2387, 563, 429, 36, 396, 508, 5, 4329, 5259, 24, 8, 372, 225, 2320, 91, 3346, 21, 4068, 79, 3855, 12, 408, 8, 3459, 16, 495, 8, 722, 130, 11319, 81, 8, 4322, 610, 11, 530, 1028, 9275, 7, 8549, 26, 5, 1]}.
***** Running training *****
  Num examples = 1095
  Num Epochs = 5
  Instantaneous batch size per device = 2
  Total train batch size (w. parallel, distributed & accumulation) = 16
  Gradient Accumulation steps = 8
  Total optimization steps = 345
***** Running testing *****
  Num examples = 237
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 28.5804, 'rouge2': 8.6561, 'rougeL': 19.5387, 'rougeLsum': 24.532}, 'ppl': {'perplexity': 26.7301, 'ref_perplexity': 19.0853}, 'bertscore': {'precision': 84.2473, 'recall': 85.3181, 'f1': 84.7645}}
***** Running testing *****
  Num examples = 237
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 30.8076, 'rouge2': 9.325, 'rougeL': 21.2377, 'rougeLsum': 26.0478}, 'ppl': {'perplexity': 39.4911, 'ref_perplexity': 17.7932}, 'bertscore': {'precision': 85.2842, 'recall': 85.4777, 'f1': 85.3623}}
***** Running testing *****
  Num examples = 237
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 30.2829, 'rouge2': 8.9702, 'rougeL': 21.1, 'rougeLsum': 25.4512}, 'ppl': {'perplexity': 26.8621, 'ref_perplexity': 17.2667}, 'bertscore': {'precision': 85.2044, 'recall': 85.3939, 'f1': 85.2807}}
***** Running testing *****
  Num examples = 237
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 30.5601, 'rouge2': 9.1368, 'rougeL': 21.2592, 'rougeLsum': 25.8507}, 'ppl': {'perplexity': 17.1316, 'ref_perplexity': 17.0578}, 'bertscore': {'precision': 85.1791, 'recall': 85.4512, 'f1': 85.2975}}
***** Running testing *****
  Num examples = 237
  Instantaneous batch size per device = 4
  Total eval batch size = 4
Using default tokenizer.
{'rouge': {'rouge1': 30.3539, 'rouge2': 9.0404, 'rougeL': 20.9929, 'rougeLsum': 25.7484}, 'ppl': {'perplexity': 12.9209, 'ref_perplexity': 16.9918}, 'bertscore': {'precision': 85.3068, 'recall': 85.436, 'f1': 85.3576}}

Start Predicting!
***** Running testing *****
  Num examples = 237
  Instantaneous batch size per device = 4
  Total eval batch size = 4
***** Running testing *****
  Num examples = 244
  Instantaneous batch size per device = 4
  Total eval batch size = 4




Parameter 'function'=<function get_datasets.<locals>.preprocess_function at 0x7905728d3ee0> of the transform datasets.arrow_dataset.Dataset._map_single couldn't be hashed properly, a random hash was used instead. Make sure your transforms and parameters are serializable with pickle or dill for the dataset fingerprinting and caching to work. If you reuse this transform, the caching mechanism will consider it to be different from the previous calls and recompute everything. This warning is only showed once. Subsequent hashing failures won't be showed.

Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 114
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 237
  Instantaneous batch size per device = 1
  Total eval batch size = 1
***** Running testing *****
  Num examples = 244
  Instantaneous batch size per device = 1
  Total eval batch size = 1
Parameter 'function'=<function get_datasets.<locals>.preprocess_function at 0x77c8e33a1ee0> of the transform datasets.arrow_dataset.Dataset._map_single couldn't be hashed properly, a random hash was used instead. Make sure your transforms and parameters are serializable with pickle or dill for the dataset fingerprinting and caching to work. If you reuse this transform, the caching mechanism will consider it to be different from the previous calls and recompute everything. This warning is only showed once. Subsequent hashing failures won't be showed.

Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1
Parameter 'function'=<function get_datasets.<locals>.preprocess_function at 0x778ea13a1ee0> of the transform datasets.arrow_dataset.Dataset._map_single couldn't be hashed properly, a random hash was used instead. Make sure your transforms and parameters are serializable with pickle or dill for the dataset fingerprinting and caching to work. If you reuse this transform, the caching mechanism will consider it to be different from the previous calls and recompute everything. This warning is only showed once. Subsequent hashing failures won't be showed.

Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1
Parameter 'function'=<function get_datasets.<locals>.preprocess_function at 0x773da7a93ee0> of the transform datasets.arrow_dataset.Dataset._map_single couldn't be hashed properly, a random hash was used instead. Make sure your transforms and parameters are serializable with pickle or dill for the dataset fingerprinting and caching to work. If you reuse this transform, the caching mechanism will consider it to be different from the previous calls and recompute everything. This warning is only showed once. Subsequent hashing failures won't be showed.

Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 109
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 114
  Instantaneous batch size per device = 1
  Total eval batch size = 1





Start Predicting!
***** Running testing *****
  Num examples = 237
  Instantaneous batch size per device = 1
  Total eval batch size = 1
***** Running testing *****
  Num examples = 244
  Instantaneous batch size per device = 1
  Total eval batch size = 1




