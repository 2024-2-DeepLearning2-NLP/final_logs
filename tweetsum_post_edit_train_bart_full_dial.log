Parameter 'function'=<function get_post_edit_training_datasets.<locals>.preprocess_function_train at 0x73d7e32bf8b0> of the transform datasets.arrow_dataset.Dataset._map_single couldn't be hashed properly, a random hash was used instead. Make sure your transforms and parameters are serializable with pickle or dill for the dataset fingerprinting and caching to work. If you reuse this transform, the caching mechanism will consider it to be different from the previous calls and recompute everything. This warning is only showed once. Subsequent hashing failures won't be showed.
Sample 7102 of the training set: {'input_ids': [0, 44799, 16, 13689, 59, 5, 2373, 544, 61, 16, 45, 447, 8, 51, 33, 5372, 13, 132, 722, 4, 50118, 45443, 553, 5, 2111, 7, 1407, 106, 10, 2789, 356, 88, 5, 576, 3104, 98, 14, 51, 64, 356, 88, 42, 4, 2, 2, 1039, 298, 12709, 1215, 22930, 39226, 7, 4615, 55, 87, 10, 367, 2397, 6, 8, 2903, 323, 1302, 45, 447, 15, 395, 48329, 50121, 50118, 1039, 3079, 2545, 3118, 19719, 13, 5, 1143, 3605, 328, 6834, 2187, 32, 47, 634, 116, 318, 47, 2220, 75, 416, 6, 860, 542, 33142, 3923, 13, 10, 367, 27659, 8, 12721, 154, 4, 50121, 50118, 1039, 298, 12709, 1215, 22930, 8630, 3490, 113, 3797, 5900, 7951, 2915, 4, 85, 1364, 22892, 12445, 19, 5, 3909, 1553, 4, 7987, 7, 395, 24, 74, 912, 22422, 59, 683, 41, 1946, 4, 50121, 50118, 1039, 298, 12709, 1215, 22930, 125, 15, 395, 24, 6897, 71, 10, 367, 2397, 4, 50121, 50118, 1039, 298, 12709, 1215, 22930, 1012, 16, 26977, 2024, 7, 41, 28359, 30577, 6, 8, 38, 437, 5, 129, 2888, 3018, 4, 50121, 50118, 1039, 3079, 2545, 3118, 4557, 13, 5, 1254, 328, 6319, 47, 1006, 149, 5, 2402, 259, 35, 1205, 640, 90, 4, 876, 73, 448, 90, 246, 530, 510, 705, 104, 705, 1343, 219, 116, 50121, 50118, 1039, 298, 12709, 1215, 22930, 374, 395, 24, 74, 45, 4615, 55, 87, 10, 367, 2397, 4, 374, 302, 24, 21, 95, 5, 5483, 6, 816, 70, 183, 662, 7, 363, 19, 129, 10, 367, 50121, 50118, 1039, 298, 12709, 1215, 22930, 22749, 2485, 4, 38, 8869, 24, 2024, 142, 59, 683, 10, 353, 5, 1012, 74, 2217, 5, 14844, 4, 1491, 686, 114, 14, 16, 31, 10, 476, 2988, 4, 50121, 50118, 1039, 298, 12709, 1215, 22930, 1832, 47, 33, 2903, 323, 15, 395, 116, 38, 314, 5, 7359, 2931, 490, 70, 183, 8, 393, 300, 1263, 4, 12091, 26, 89, 21, 10, 2248, 2289, 2067, 4, 50121, 50118, 1039, 3079, 2545, 3118, 19719, 13, 5, 251, 2067, 328, 12091, 73, 29465, 323, 16, 577, 706, 73, 406, 4, 18258, 47, 441, 7, 860, 70, 9, 5, 2402, 14, 52, 348, 1286, 98, 444, 116, 2], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [0, 133, 2111, 16, 2114, 5, 936, 14, 37, 16, 3276, 7, 4615, 55, 87, 367, 2397, 8, 161, 14, 5, 2903, 323, 1302, 45, 447, 15, 395, 4, 20, 2936, 6990, 61, 2187, 5, 2111, 21, 634, 8, 172, 6990, 7, 860, 542, 33142, 3923, 13, 10, 367, 5251, 8, 172, 7, 12721, 8, 3649, 7, 12091, 73, 29465, 323, 4, 2]}.
***** Running training *****
  Num examples = 8790
  Num Epochs = 5
  Instantaneous batch size per device = 16
  Total train batch size (w. parallel, distributed & accumulation) = 32
  Gradient Accumulation steps = 2
  Total optimization steps = 1375
Parameter 'function'=<function get_post_edit_training_datasets.<locals>.preprocess_function_train at 0x7df19a47f8b0> of the transform datasets.arrow_dataset.Dataset._map_single couldn't be hashed properly, a random hash was used instead. Make sure your transforms and parameters are serializable with pickle or dill for the dataset fingerprinting and caching to work. If you reuse this transform, the caching mechanism will consider it to be different from the previous calls and recompute everything. This warning is only showed once. Subsequent hashing failures won't be showed.
Sample 7102 of the training set: {'input_ids': [0, 44799, 16, 13689, 59, 5, 2373, 544, 61, 16, 45, 447, 8, 51, 33, 5372, 13, 132, 722, 4, 50118, 45443, 553, 5, 2111, 7, 1407, 106, 10, 2789, 356, 88, 5, 576, 3104, 98, 14, 51, 64, 356, 88, 42, 4, 2, 2, 1039, 298, 12709, 1215, 22930, 39226, 7, 4615, 55, 87, 10, 367, 2397, 6, 8, 2903, 323, 1302, 45, 447, 15, 395, 48329, 50121, 50118, 1039, 3079, 2545, 3118, 19719, 13, 5, 1143, 3605, 328, 6834, 2187, 32, 47, 634, 116, 318, 47, 2220, 75, 416, 6, 860, 542, 33142, 3923, 13, 10, 367, 27659, 8, 12721, 154, 4, 50121, 50118, 1039, 298, 12709, 1215, 22930, 8630, 3490, 113, 3797, 5900, 7951, 2915, 4, 85, 1364, 22892, 12445, 19, 5, 3909, 1553, 4, 7987, 7, 395, 24, 74, 912, 22422, 59, 683, 41, 1946, 4, 50121, 50118, 1039, 298, 12709, 1215, 22930, 125, 15, 395, 24, 6897, 71, 10, 367, 2397, 4, 50121, 50118, 1039, 298, 12709, 1215, 22930, 1012, 16, 26977, 2024, 7, 41, 28359, 30577, 6, 8, 38, 437, 5, 129, 2888, 3018, 4, 50121, 50118, 1039, 3079, 2545, 3118, 4557, 13, 5, 1254, 328, 6319, 47, 1006, 149, 5, 2402, 259, 35, 1205, 640, 90, 4, 876, 73, 448, 90, 246, 530, 510, 705, 104, 705, 1343, 219, 116, 50121, 50118, 1039, 298, 12709, 1215, 22930, 374, 395, 24, 74, 45, 4615, 55, 87, 10, 367, 2397, 4, 374, 302, 24, 21, 95, 5, 5483, 6, 816, 70, 183, 662, 7, 363, 19, 129, 10, 367, 50121, 50118, 1039, 298, 12709, 1215, 22930, 22749, 2485, 4, 38, 8869, 24, 2024, 142, 59, 683, 10, 353, 5, 1012, 74, 2217, 5, 14844, 4, 1491, 686, 114, 14, 16, 31, 10, 476, 2988, 4, 50121, 50118, 1039, 298, 12709, 1215, 22930, 1832, 47, 33, 2903, 323, 15, 395, 116, 38, 314, 5, 7359, 2931, 490, 70, 183, 8, 393, 300, 1263, 4, 12091, 26, 89, 21, 10, 2248, 2289, 2067, 4, 50121, 50118, 1039, 3079, 2545, 3118, 19719, 13, 5, 251, 2067, 328, 12091, 73, 29465, 323, 16, 577, 706, 73, 406, 4, 18258, 47, 441, 7, 860, 70, 9, 5, 2402, 14, 52, 348, 1286, 98, 444, 116, 2], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [0, 133, 2111, 16, 2114, 5, 936, 14, 37, 16, 3276, 7, 4615, 55, 87, 367, 2397, 8, 161, 14, 5, 2903, 323, 1302, 45, 447, 15, 395, 4, 20, 2936, 6990, 61, 2187, 5, 2111, 21, 634, 8, 172, 6990, 7, 860, 542, 33142, 3923, 13, 10, 367, 5251, 8, 172, 7, 12721, 8, 3649, 7, 12091, 73, 29465, 323, 4, 2]}.
***** Running training *****
  Num examples = 8790
  Num Epochs = 5
  Instantaneous batch size per device = 16
  Total train batch size (w. parallel, distributed & accumulation) = 32
  Gradient Accumulation steps = 2
  Total optimization steps = 1375
Parameter 'function'=<function get_post_edit_training_datasets.<locals>.preprocess_function_train at 0x78583267f8b0> of the transform datasets.arrow_dataset.Dataset._map_single couldn't be hashed properly, a random hash was used instead. Make sure your transforms and parameters are serializable with pickle or dill for the dataset fingerprinting and caching to work. If you reuse this transform, the caching mechanism will consider it to be different from the previous calls and recompute everything. This warning is only showed once. Subsequent hashing failures won't be showed.
Sample 7102 of the training set: {'input_ids': [0, 44799, 16, 13689, 59, 5, 2373, 544, 61, 16, 45, 447, 8, 51, 33, 5372, 13, 132, 722, 4, 50118, 45443, 553, 5, 2111, 7, 1407, 106, 10, 2789, 356, 88, 5, 576, 3104, 98, 14, 51, 64, 356, 88, 42, 4, 2, 2, 1039, 298, 12709, 1215, 22930, 39226, 7, 4615, 55, 87, 10, 367, 2397, 6, 8, 2903, 323, 1302, 45, 447, 15, 395, 48329, 50121, 50118, 1039, 3079, 2545, 3118, 19719, 13, 5, 1143, 3605, 328, 6834, 2187, 32, 47, 634, 116, 318, 47, 2220, 75, 416, 6, 860, 542, 33142, 3923, 13, 10, 367, 27659, 8, 12721, 154, 4, 50121, 50118, 1039, 298, 12709, 1215, 22930, 8630, 3490, 113, 3797, 5900, 7951, 2915, 4, 85, 1364, 22892, 12445, 19, 5, 3909, 1553, 4, 7987, 7, 395, 24, 74, 912, 22422, 59, 683, 41, 1946, 4, 50121, 50118, 1039, 298, 12709, 1215, 22930, 125, 15, 395, 24, 6897, 71, 10, 367, 2397, 4, 50121, 50118, 1039, 298, 12709, 1215, 22930, 1012, 16, 26977, 2024, 7, 41, 28359, 30577, 6, 8, 38, 437, 5, 129, 2888, 3018, 4, 50121, 50118, 1039, 3079, 2545, 3118, 4557, 13, 5, 1254, 328, 6319, 47, 1006, 149, 5, 2402, 259, 35, 1205, 640, 90, 4, 876, 73, 448, 90, 246, 530, 510, 705, 104, 705, 1343, 219, 116, 50121, 50118, 1039, 298, 12709, 1215, 22930, 374, 395, 24, 74, 45, 4615, 55, 87, 10, 367, 2397, 4, 374, 302, 24, 21, 95, 5, 5483, 6, 816, 70, 183, 662, 7, 363, 19, 129, 10, 367, 50121, 50118, 1039, 298, 12709, 1215, 22930, 22749, 2485, 4, 38, 8869, 24, 2024, 142, 59, 683, 10, 353, 5, 1012, 74, 2217, 5, 14844, 4, 1491, 686, 114, 14, 16, 31, 10, 476, 2988, 4, 50121, 50118, 1039, 298, 12709, 1215, 22930, 1832, 47, 33, 2903, 323, 15, 395, 116, 38, 314, 5, 7359, 2931, 490, 70, 183, 8, 393, 300, 1263, 4, 12091, 26, 89, 21, 10, 2248, 2289, 2067, 4, 50121, 50118, 1039, 3079, 2545, 3118, 19719, 13, 5, 251, 2067, 328, 12091, 73, 29465, 323, 16, 577, 706, 73, 406, 4, 18258, 47, 441, 7, 860, 70, 9, 5, 2402, 14, 52, 348, 1286, 98, 444, 116, 2], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'labels': [0, 133, 2111, 16, 2114, 5, 936, 14, 37, 16, 3276, 7, 4615, 55, 87, 367, 2397, 8, 161, 14, 5, 2903, 323, 1302, 45, 447, 15, 395, 4, 20, 2936, 6990, 61, 2187, 5, 2111, 21, 634, 8, 172, 6990, 7, 860, 542, 33142, 3923, 13, 10, 367, 5251, 8, 172, 7, 12721, 8, 3649, 7, 12091, 73, 29465, 323, 4, 2]}.
***** Running training *****
  Num examples = 8790
  Num Epochs = 5
  Instantaneous batch size per device = 8
  Total train batch size (w. parallel, distributed & accumulation) = 16
  Gradient Accumulation steps = 2
  Total optimization steps = 2750
***** Running testing *****
  Num examples = 660
  Instantaneous batch size per device = 16
  Total eval batch size = 16
Using default tokenizer.
{'rouge': {'rouge1': 53.6168, 'rouge2': 28.6932, 'rougeL': 43.9031, 'rougeLsum': 48.2461}, 'ppl': {'perplexity': 12.3876, 'ref_perplexity': 7.2005}, 'bertscore': {'precision': 89.644, 'recall': 90.568, 'f1': 90.0929}}
***** Running testing *****
  Num examples = 660
  Instantaneous batch size per device = 16
  Total eval batch size = 16
Using default tokenizer.
{'rouge': {'rouge1': 53.5803, 'rouge2': 27.6985, 'rougeL': 43.4814, 'rougeLsum': 48.0053}, 'ppl': {'perplexity': 8.301, 'ref_perplexity': 15.3512}, 'bertscore': {'precision': 89.8558, 'recall': 90.3558, 'f1': 90.0955}}
***** Running testing *****
  Num examples = 660
  Instantaneous batch size per device = 16
  Total eval batch size = 16
Using default tokenizer.
{'rouge': {'rouge1': 54.4116, 'rouge2': 28.0826, 'rougeL': 43.8064, 'rougeLsum': 48.7041}, 'ppl': {'perplexity': 6.4307, 'ref_perplexity': 19.2137}, 'bertscore': {'precision': 89.8644, 'recall': 90.3536, 'f1': 90.0979}}
